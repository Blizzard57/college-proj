Script started on 2019-02-02 15:34:22+05:30 [TERM="xterm-256color" TTY="/dev/pts/5" COLUMNS="80" LINES="24"]
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hssed  s scriptsed -e /s/....\ ....\ ../#### #### ##/g[39Dscript                                 [33D    s  ccd[?1l>[?2004l
]2;cd]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~]1;~[0m[27m[24m[J
[1m[0m[1m[36m~[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd git_projects[1m/[0m[0m [?1l>[?2004l
]2;cd git_projects]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggot  g git push origin master[?1l>[?2004l
]2;git push origin master]1;gitfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push origin master[1C[1C[1C[1C[1C[1C master [8D master [8D master [8D master [8D master [8D master [8D. master[?1l>[?2004l
]2;git push . master]1;gitEverything up-to-date
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit push . master[1C master [8Do masterr masteri masterg masteri mastern master[?1l>[?2004l
]2;git push origin master]1;gitfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push origin mastersgit push origin master[22Dsugit push origin master[22Ddgit push origin master[22Dogit push origin master[22D git push origin master[22D[?1l>[?2004l
]2;sudo git push origin master]1;git[sudo] password for blizzard: 
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m2s[0m[33m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hccd -[?1l>[?2004l
]2;cd -]1;cd~
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~]1;~[0m[27m[24m[J
[1m[0m[1m[36m~[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd --[?1l>[?2004l
]2;cd --]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~]1;~[0m[27m[24m[J
[1m[0m[1m[36m~[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd 
[01;34mBackup[0m/        [01;34mDocuments[0m/     [01;34mgit_projects[0m/  [01;34mPictures[0m/      [01;34mTemplates[0m/   
[J[01;34mDesktop[0m/       [J[01;34mDownloads[0m/     [J[01;34mMusic[0m/         [J[01;34mPublic[0m/        [J[01;34mVideos[0m/      [J[A[A[0m[27m[24m[0m[39m[2Ccd[K[0m[39m[1CBackup[1m/[0m
[7mBackup/      [0m  [01;34mDocuments[0m/     [01;34mgit_projects[0m/  [01;34mPictures[0m/      [01;34mTemplates[0m/   [K
[J[01;34mDesktop[0m/       [J[01;34mDownloads[0m/     [J[01;34mMusic[0m/         [J[01;34mPublic[0m/        [J[01;34mVideos[0m/      [J[A[A[0m[27m[24m[0m[39m[2Ccd Backup[1m/[0m[K[0m[39m
[7mBackup/      [0m  [7mBackup/      [0m  [A[0m[27m[24m[0m[39m[2Ccd Backup[1m/[0m[K[0m[39mDeskto[0mp[1m/[0m
[01;34mBackup[0m/        [1B[7mDesktop/     [0m  [A[A[0m[27m[24m[0m[39m[2Ccd Desktop[1m/[0m[K[0m[39mocumen[0mts[1m/[0m
[15C[7mDocuments/   [0m  [1B[01;34mDesktop[0m/       [A[A[0m[27m[24m[0m[39m[2Ccd Documents[1m/[0m[K[0m[39m
[J[A[15C[0m/
[J[J[01;34mCiS[0m/  [J[01;34mISS[0m/  [J[01;34mlab[0m/  [J[01;34moj[0m/ [J[A[0m[27m[24m[0m[39m[2Ccd Documents/[K[0m[39mCiS[1m/[0m
[J[7mCiS/[0m  [J[01;34mISS[0m/  [J[01;34mlab[0m/  [J[01;34moj[0m/ [J[A[0m[27m[24m[0m[39m[2Ccd Documents/CiS[1m/[0m[K[0m[39m
[7mCiS/[0m  [7mCiS/[0m  [A[0m[27m[24m[0m[39m[2Ccd Documents/CiS[1m/[0m[K[0m[39mIS[2C
[6C[7mISS/[0m  [01;34mCiS[0m/  [A[0m[27m[24m[0m[39m[2Ccd Documents/ISS[1m/[0m[K[0m[39mlab[1C
[12C[7mlab/[0m  [6C[01;34mISS[0m/  [A[0m[27m[24m[0m[39m[2Ccd Documents/lab[1m/[0m[K[0m[39m
[J[A[19C[0m [?1l>[?2004l
[J]2;cd Documents/lab]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab]1;~/Documents/lab[0m[27m[24m[J
[1m[0m[1m[36m~/Documents/lab[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[0m[01;34miss[0m
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab]1;~/Documents/lab[0m[27m[24m[J
[1m[0m[1m[36m~/Documents/lab[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd iss[1m/[0m[0m [?1l>[?2004l
]2;cd iss]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hss;[?1l>[?2004l
]2;s]1;s;zsh: command not found: s
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsawk_comm.sh  card.txt  grades.txt  hamlet.txt  lab3.sh  marks.txt  typescript
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hmmkdr ir local-repo[?1l>[?2004l
]2;mkdir local-repo]1;mkdir[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hllocal-repo[1m/[0m[0m [?1l>[?2004l
]2;local-repo]1;local-repo[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlab/iss/local-repo[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit init[?1l>[?2004l
]2;git init]1;gitInitialized empty Git repository in /home/blizzard/Documents/lab/iss/local-repo/.git/
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi foo.txt[?1l>[?2004l
]2;vim foo.txt]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"foo.txt" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 foo.txt [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                                [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [m[38;5;252m[48;5;234m[2;1H[38;5;242m 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[3;2H[38;5;69m[48;5;233m~                                                                              [4;2H~                                                                              [5;2H~                                                                              [6;2H~                                                                              [7;2H~                                                                              [8;2H~                                                                              [9;2H~                                                                              [10;2H~                                                                              [11;2H~                                                                              [12;2H~                                                                              [13;2H~                                                                              [14;2H~                                                                              [15;2H~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m master   foo.txt [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                    [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m 100% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   0:1  [?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[24;1H[38;5;252m[48;5;18m-- INSERT --[m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;119m INSERT [m[38;5;252m[48;5;234m[38;5;119m[48;5;240m [2;2H[?25h[m[38;5;252m[48;5;234m[1;12H[38;5;252m[48;5;235m+ [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [?25l[m[38;5;252m[48;5;234m[2;2HI[22;28H[38;5;252m[48;5;240m  + [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[43C[38;5;238m[48;5;244m1:2[2;3H[?25h[?25l[m[38;5;252m[48;5;234mt[22;78H[38;5;238m[48;5;244m3[2;4H[?25h[?2004h[?25l[22;78H4[2;5H[?25h[?25l[m[38;5;252m[48;5;234mi[22;78H[38;5;238m[48;5;244m5[2;6H[?25h[?25l[m[38;5;252m[48;5;234ms[22;78H[38;5;238m[48;5;244m6[2;7H[?25h[?2004h[?25l[22;78H7[2;8H[?25h[?25l[m[38;5;252m[48;5;234ma[22;78H[38;5;238m[48;5;244m8[2;9H[?25h[?2004h[?25l[22;78H9[2;10H[?25h[?25l[m[38;5;252m[48;5;234mt[22;78H[38;5;238m[48;5;244m10[2;11H[?25h[?25l[m[38;5;252m[48;5;234me[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?25l[m[38;5;252m[48;5;234mm[22;79H[38;5;238m[48;5;244m2[2;13H[?25h[?2004h[?25l[m[38;5;252m[48;5;234m[2;12H[K[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?2004h[?25l[m[38;5;252m[48;5;234m[2;11H[K[22;79H[38;5;238m[48;5;244m0[2;11H[?25h[?25l[m[38;5;252m[48;5;234me[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?25l[m[38;5;252m[48;5;234mm[22;79H[38;5;238m[48;5;244m2[2;13H[?25h[?25l[m[38;5;252m[48;5;234mp[22;79H[38;5;238m[48;5;244m3[2;14H[?25h[?2004h[?25l[22;79H4[2;15H[?25h[?25l[m[38;5;252m[48;5;234ml[22;79H[38;5;238m[48;5;244m5[2;16H[?25h[?25l[m[38;5;252m[48;5;234mo[22;79H[38;5;238m[48;5;244m6[2;17H[?25h[?25l[m[38;5;252m[48;5;234mc[22;79H[38;5;238m[48;5;244m7[2;18H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m8[2;19H[?25h[?25l[m[38;5;252m[48;5;234ml[22;79H[38;5;238m[48;5;244m9[2;20H[?25h[?2004h[?25l[22;78H20[2;21H[?25h[?25l[m[38;5;252m[48;5;234md[22;79H[38;5;238m[48;5;244m1[2;22H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m2[2;23H[?25h[?25l[m[38;5;252m[48;5;234mt[22;79H[38;5;238m[48;5;244m3[2;24H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m4[2;25H[?25h[?2004h[?25l[22;79H5[2;26H[?25h[?25l[m[38;5;252m[48;5;234mf[22;79H[38;5;238m[48;5;244m6[2;27H[?25h[?25l[m[38;5;252m[48;5;234mi[22;79H[38;5;238m[48;5;244m7[2;28H[?25h[?25l[m[38;5;252m[48;5;234ml[22;79H[38;5;238m[48;5;244m8[2;29H[?25h[?25l[m[38;5;252m[48;5;234me[22;79H[38;5;238m[48;5;244m9[2;30H[?25h[m[38;5;252m[48;5;234m[24;1H[K[2;29H[?25l[23;1H[K[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[69C[38;5;238m[48;5;244m8[2;29H[?25h[?25l[?25h[?25l[23;1H[m[38;5;252m[48;5;234m:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"foo.txt" [New] 1L, 29C written
[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m12s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkout -b branch[?1l>[?2004l
]2;git checkout -b branch]1;gitSwitched to a new branch 'branch'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi bar.txt[?1l>[?2004l
]2;vim bar.txt]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"bar.txt" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 bar.txt [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                                [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[2;1H[38;5;242m 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[3;2H[38;5;69m[48;5;233m~                                                                              [4;2H~                                                                              [5;2H~                                                                              [6;2H~                                                                              [7;2H~                                                                              [8;2H~                                                                              [9;2H~                                                                              [10;2H~                                                                              [11;2H~                                                                              [12;2H~                                                                              [13;2H~                                                                              [14;2H~                                                                              [15;2H~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m branch   bar.txt [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                    [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m 100% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   0:1  [2;2H[?25h[?25l[m[38;5;252m[48;5;234m[24;1H[38;5;252m[48;5;18m-- INSERT --[m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;119m INSERT [m[38;5;252m[48;5;234m[38;5;119m[48;5;240m [2;2H[?25h[m[38;5;252m[48;5;234m[1;12H[38;5;252m[48;5;235m+ [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [?25l[m[38;5;252m[48;5;234m[2;2HT[22;28H[38;5;252m[48;5;240m  + [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[43C[38;5;238m[48;5;244m1:2[2;3H[?25h[?25l[m[38;5;252m[48;5;234mh[22;78H[38;5;238m[48;5;244m3[2;4H[?25h[?25l[m[38;5;252m[48;5;234mi[22;78H[38;5;238m[48;5;244m4[2;5H[?25h[?25l[m[38;5;252m[48;5;234ms[22;78H[38;5;238m[48;5;244m5[2;6H[?25h[?2004h[?25l[22;78H6[2;7H[?25h[?25l[m[38;5;252m[48;5;234mi[22;78H[38;5;238m[48;5;244m7[2;8H[?25h[?25l[m[38;5;252m[48;5;234ms[22;78H[38;5;238m[48;5;244m8[2;9H[?25h[?2004h[?25l[22;78H9[2;10H[?25h[?25l[m[38;5;252m[48;5;234mb[22;78H[38;5;238m[48;5;244m10[2;11H[?25h[?25l[m[38;5;252m[48;5;234mr[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m2[2;13H[?25h[?25l[m[38;5;252m[48;5;234mn[22;79H[38;5;238m[48;5;244m3[2;14H[?25h[?25l[m[38;5;252m[48;5;234mc[22;79H[38;5;238m[48;5;244m4[2;15H[?25h[?25l[m[38;5;252m[48;5;234mh[22;79H[38;5;238m[48;5;244m5[2;16H[?25h[?25l[m[38;5;252m[48;5;234me[22;79H[38;5;238m[48;5;244m6[2;17H[?25h[?25l[m[38;5;252m[48;5;234md[22;79H[38;5;238m[48;5;244m7[2;18H[?25h[?2004h[?25l[22;79H8[2;19H[?25h[?25l[m[38;5;252m[48;5;234md[22;79H[38;5;238m[48;5;244m9[2;20H[?25h[?25l[m[38;5;252m[48;5;234ma[22;78H[38;5;238m[48;5;244m20[2;21H[?25h[?25l[m[38;5;252m[48;5;234mt[22;79H[38;5;238m[48;5;244m1[2;22H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m2[2;23H[?25h[?2004h[?25l[22;79H3[2;24H[?25h[?25l[m[38;5;252m[48;5;234mf[22;79H[38;5;238m[48;5;244m4[2;25H[?25h[?25l[m[38;5;252m[48;5;234mi[22;79H[38;5;238m[48;5;244m5[2;26H[?25h[?25l[m[38;5;252m[48;5;234ml[22;79H[38;5;238m[48;5;244m6[2;27H[?25h[?25l[m[38;5;252m[48;5;234me[22;79H[38;5;238m[48;5;244m7[2;28H[?25h[m[38;5;252m[48;5;234m[24;1H[K[2;27H[?25l[23;1H[K[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[69C[38;5;238m[48;5;244m6[2;27H[?25h[?25l[?25h[?25l[23;1H[m[38;5;252m[48;5;234m:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bar.txt" [New] 1L, 27C written
[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m9s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit  g  ggit c add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [+][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggi t commit ""L"o"c"a"l" "C"o"m"m"i"t"[?1l>[?2004l
]2;git commit "Local Commit"]1;giterror: pathspec 'Local Commit' did not match any file(s) known to git
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [+][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit commit "Local Commit"-"Local Commit"[14Dm"Local Commit"[14D "Local Commit"[14D[?1l>[?2004l
]2;git commit -m "Local Commit"]1;git[branch (root-commit) 56ef778] Local Commit
 2 files changed, 2 insertions(+)
 create mode 100644 bar.txt
 create mode 100644 foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit commit -m "Local Commit"[17D[3P[14C   [21Dadd .                [16D[9Dvi bar.txt[10Dgit checkout -b branch[1C        mas   master[?1l>[?2004l
]2;git checkout master]1;giterror: pathspec 'master' did not match any file(s) known to git
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsbar.txt  foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkout master[14Dommit -m "Local Commit"[17D[3P[14C   [21Dadd .                [16Dcheckout -b branch[1C       
[0m--                               -- start file arguments                      
-b                               -- create a new branch based at given commit 
-B                               -- create or update branch based at given com
--conflict                       -- same as --merge, using given merge style  
--detach                         -- detach the HEAD at named commit           
--force                      -f  -- force branch switch/ignore unmerged entrie
--ignore-other-worktrees         -- don't check if another worktree is holding
--ignore-skip-worktree-bits      -- don't limit pathspecs to sparse entries on
--merge                      -m  -- 3way merge current branch, working tree an
--no-track                       -- override the branch.autosetupmerge configu
--orphan                         -- create a new orphan branch based at given 
--ours                       -2  -- check out stage #2 for unmerged paths     
--patch                      -p  -- interactively select hunks in diff between
--progress                       -- force progress reporting                  
--quiet                      -q  -- suppress progress reporting               
--recurse-submodules             -- control recursive updating of submodules  
--theirs                     -3  -- check out stage #3 for unmerged paths     
[J--track                      [J-t  [J-- set up configuration so pull merges from t[J[18A[0m[27m[24m[0m[39m[2Cgit checkout -[K[0m[39m-
[7m--                         [0m      -- start file arguments                      [K
-b                               -- create a new branch based at given commit [K
-B                               -- create or update branch based at given com[K
--conflict                       -- same as --merge, using given merge style  [K
--detach                         -- detach the HEAD at named commit           [K
--force                      -f  -- force branch switch/ignore unmerged entrie[K
--ignore-other-worktrees         -- don't check if another worktree is holding[K
--ignore-skip-worktree-bits      -- don't limit pathspecs to sparse entries on[K
--merge                      -m  -- 3way merge current branch, working tree an[K
--no-track                       -- override the branch.autosetupmerge configu[K
--orphan                         -- create a new orphan branch based at given [K
--ours                       -2  -- check out stage #2 for unmerged paths     [K
--patch                      -p  -- interactively select hunks in diff between[K
--progress                       -- force progress reporting                  [K
--quiet                      -q  -- suppress progress reporting               [K
--recurse-submodules             -- control recursive updating of submodules  [K
--theirs                     -3  -- check out stage #3 for unmerged paths     [K
[J--track                      [J-t  [J-- set up configuration so pull merges from t[J[18A[0m[27m[24m[0m[39m[2Cgit checkout --[K[0m[39m
[7m--                         [0m  [7m--                         [0m  [A[0m[27m[24m[0m[39m[2Cgit checkout --[K[0m[39mb
[0m--                           [1B[7m-b                         [0m  [A[A[0m[27m[24m[0m[39m[2Cgit checkout -b[K[0m[39mB
[1B[0m-b                           [1B[7m-B                         [0m  [3A[0m[27m[24m[0m[39m[2Cgit checkout -B[K[0m[39m-conflict[1m=[0m
[2B[0m-B                           [1B[7m--conflict                 [0m  [4A[0m[27m[24m[0m[39m[2Cgit checkout --conflict[1m=[0m[K[0m[39m[9Ddetach  [0m 
[3B[0m--conflict                   [1B[7m--detach                   [0m  [5A[0m[27m[24m[0m[39m[2Cgit checkout --detach[K[0m[39mforce 
[4B[0m--detach                     [1B[7m--force                    [0m  [6A[0m[27m[24m[0m[39m[2Cgit checkout --force[K[0m[39mignore-other-worktrees
[5B[0m--force                      [1B[7m--ignore-other-worktrees   [0m  [7A[0m[27m[24m[0m[39m[2Cgit checkout --ignore-other-worktrees[K[0m[39m[15Dskip[P[9C-bits
[6B[0m--ignore-other-worktrees     [1B[7m--ignore-skip-worktree-bits[0m  [8A[0m[27m[24m[0m[39m[2Cgit checkout --ignore-skip-worktree-bits[K[0m[39m[25Dmerge                    [20D
[7B[0m--ignore-skip-worktree-bits  [1B[7m--merge                    [0m  [9A[0m[27m[24m[0m[39m[2Cgit checkout --merge[K[0m[39mno-track
[8B[0m--merge                      [1B[7m--no-track                 [0m  [10A[0m[27m[24m[0m[39m[2Cgit checkout --no-track[K[0m[39m[8Dorphan[1m=[0m 
[9B[0m--no-track                   [1B[7m--orphan                   [0m  [11A[0m[27m[24m[0m[39m[2Cgit checkout --orphan[1m=[0m[K[0m[39murs  [0m 
[10B[0m--orphan                     [1B[7m--ours                     [0m  [12A[0m[27m[24m[0m[39m[2Cgit checkout --ours[K[0m[39mpatch
[11B[0m--ours                       [1B[7m--patch                    [0m  [13A[0m[27m[24m[0m[39m[2Cgit checkout --patch[K[0m[39mrogress
[12B[0m--patch                      [1B[7m--progress                 [0m  [14A[0m[27m[24m[0m[39m[2Cgit checkout --progress[K[0m[39m[8Dquiet   
[13B[0m--progress                   [1B[7m--quiet                    [0m  [15A[0m[27m[24m[0m[39m[2Cgit checkout --quiet[K[0m[39mrecurse-submodules[1m=[0m
[14B[0m--quiet                      [1B[7m--recurse-submodules       [0m  [16A[0m[27m[24m[0m[39m[2Cgit checkout --recurse-submodules[1m=[0m[K[0m[39m[19Dthei[2C            [0m [13D
[15B[0m--recurse-submodules         [1B[7m--theirs                   [0m  [17A[0m[27m[24m[0m[39m[2Cgit checkout --theirs[K[0m[39mrack 
[16B[0m--theirs                     [1B[7m--track                    [0m  [18A[0m[27m[24m[0m[39m[2Cgit checkout --track[K[0m[39mf     
[5B[29C[7m-f[0m  [12B--track                      [18A[0m[27m[24m[0m[39m[2Cgit checkout -f[K[0m[39mm
[5B[29C[0m-f  [3B[29C[7m-m[0m  [9A[0m[27m[24m[0m[39m[2Cgit checkout -m[K[0m[39m2
[8B[29C[0m-m  [3B[29C[7m-2[0m  [12A[0m[27m[24m[0m[39m[2Cgit checkout -2[K[0m[39mp
[11B[29C[0m-2  [1B[29C[7m-p[0m  [13A[0m[27m[24m[0m[39m[2Cgit checkout -p[K[0m[39mq
[12B[29C[0m-p  [2B[29C[7m-q[0m  [15A[0m[27m[24m[0m[39m[2Cgit checkout -q[K[0m[39m3
[14B[29C[0m-q  [2B[29C[7m-3[0m  [17A[0m[27m[24m[0m[39m[2Cgit checkout -3[K[0m[39mt
[16B[29C[0m-3  [1B[29C[7m-t[0m  [18A[0m[27m[24m[0m[39m[2Cgit checkout -t[K[0m[39m-
[7m--                         [0m  [17B[29C-t  [18A[0m[27m[24m[0m[39m[2Cgit checkout --[K[0m[39m
[J[A[17C[1m [0m[0m           master[?1l>[?2004l
[J]2;git master]1;gitgit: 'master' is not a git command. See 'git --help'.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit master      check    
[0mcat-file         -- provide content or type information for repository objec
check-attr       -- display gitattributes information
check-ignore     -- debug gitignore/exclude files
check-mailmap    -- show canonical names and email addresses of contacts
check-ref-format -- ensure that a reference name is well formed
checkout         -- checkout branch or paths to working tree
checkout-index   -- copy files from index to working directory
cherry           -- find commits not merged upstream
cherry-pick      -- apply changes introduced by some existing commits
citool           -- graphical alternative to git commit
clean            -- remove untracked files from working tree
clone            -- clone repository into new directory
commit           -- record changes to repository
commit-tree      -- create new commit object
config           -- get and set repository or global options
count-objects    -- count unpacked objects and display their disk consumptio
cvsexportcommit  -- export a single commit to a CVS checkout
cvsimport        -- import a CVS "repository" into a git repository
[Jcvsserver        -- run a CVS server emulator for git[J[19A[0m[27m[24m[0m[39m[2Cgit c[K[0m[39m 
[Jzsh: do you wish to see all 130 possibilities (130 lines)? y[J[0madd                -- add file contents to index
am                 -- apply patches from a mailbox
apply              -- apply patch to files and/or to index
archimport         -- import an Arch repository into git
archive            -- create archive of files from named tree
bisect             -- find, by binary search, change that introduced a bug
blame              -- show what revision and author last modified each line
branch             -- list, create, or delete branches
bundle             -- move objects and refs by archive
cat-file           -- provide content or type information for repository obj
check-attr         -- display gitattributes information
check-ignore       -- debug gitignore/exclude files
check-mailmap      -- show canonical names and email addresses of contacts
check-ref-format   -- ensure that a reference name is well formed
checkout           -- checkout branch or paths to working tree
checkout-index     -- copy files from index to working directory
cherry             -- find commits not merged upstream
cherry-pick        -- apply changes introduced by some existing commits
citool             -- graphical alternative to git commit
clean              -- remove untracked files from working tree
clone              -- clone repository into new directory
commit             -- record changes to repository
[Jcommit-tree        -- create new commit object[J
config             -- get and set repository or global options[J
count-objects      -- count unpacked objects and display their disk consumpt[J
cvsexportcommit    -- export a single commit to a CVS checkout[J
cvsimport          -- import a CVS "repository" into a git repository[J
cvsserver          -- run a CVS server emulator for git[J
daemon             -- run a really simple server for git repositories[J
describe           -- show most recent tag that is reachable from a commit[J
diff               -- show changes between commits, commit and working tree,[J
diff-files         -- compare files in working tree and index[J
diff-index         -- compare content and mode of blobs between index and re[J
diff-tree          -- compare content and mode of blobs found via two tree o[J
difftool           -- show changes using common diff tools[J
fast-export        -- data exporter[J
fast-import        -- import information into git directly[J
fetch              -- download objects and refs from another repository[J
fetch-pack         -- receive missing objects from another repository[J
filter-branch      -- rewrite branches[J
fmt-merge-msg      -- produce merge commit message[J
for-each-ref       -- output information on each ref[J
format-patch       -- prepare patches for e-mail submission[J
fsck               -- verify connectivity and validity of objects in databas[J
gc                 -- cleanup unnecessary files and optimize local repositor[J
get-tar-commit-id  -- extract commit ID from an archive created using git ar[J
grep               -- print lines matching a pattern[J
gui                -- run portable graphical interface to git[J
hash-object        -- compute object ID and optionally create a blob from a[J
help               -- display help information about git[J
http-backend       -- run a server side implementation of Git over HTTP[J
http-fetch         -- download from remote git repository via HTTP[J
http-push          -- push objects over HTTP/DAV to another repository[J
imap-send          -- send a collection of patches to an IMAP folder[J
index-pack         -- build pack index file for an existing packed archive[J
init               -- create empty git repository or re-initialize an existi[J
instaweb           -- instantly browse your working repository in gitweb[J
interpret-trailers -- add or parse structured information in commit messages[J
log                -- show commit logs[J
ls-files           -- information about files in index/working directory[J
ls-remote          -- show references in a remote repository[J
ls-tree            -- list contents of a tree object[J
mailinfo           -- extract patch and authorship from a single email messa[J
mailsplit          -- split mbox file into a list of files[J
merge              -- join two or more development histories together[J
merge-base         -- find as good a common ancestor as possible for a merge[J
merge-file         -- run a three-way file merge[J
merge-index        -- run merge for files needing merging[J
merge-one-file     -- standard helper-program to use with git merge-index[J
merge-tree         -- show three-way merge without touching index[J
mergetool          -- run merge conflict resolution tools to resolve merge c[J
mktag              -- create tag object[J
mktree             -- build tree-object from git ls-tree formatted text[J
mv                 -- move or rename file, directory, or symlink[J
name-rev           -- find symbolic names for given revisions[J
notes              -- add or inspect object notes[J
pack-objects       -- create packed archive of objects[J
pack-redundant     -- find redundant pack files[J
pack-refs          -- pack heads and tags for efficient repository access[J
parse-remote       -- routines to help parsing remote repository access para[J
patch-id           -- compute unique ID for a patch[J
prune              -- prune all unreachable objects from the object database[J
prune-packed       -- remove extra objects that are already in pack files[J
pull               -- fetch from and merge with another repository or local[J
push               -- update remote refs along with associated objects[J
quiltimport        -- apply a quilt patchset[J
read-tree          -- read tree information into directory index[J
rebase             -- forward-port local commits to the updated upstream hea[J
receive-pack       -- receive what is pushed into repository[J
reflog             -- manage reflog information[J
remote             -- manage set of tracked repositories[J
repack             -- pack unpacked objects in a repository[J
replace            -- create, list, delete refs to replace objects[J
request-pull       -- generate summary of pending changes[J
rerere             -- reuse recorded resolution of conflicted merges[J
reset              -- reset current HEAD to specified state[J
rev-list           -- list commit object in reverse chronological order[J
rev-parse          -- pick out and massage parameters for other git commands[J
revert             -- revert existing commits[J
rm                 -- remove files from the working tree and from the index[J
send-email         -- send collection of patches as emails[J
send-pack          -- push objects over git protocol to another repository[J
shell              -- restricted login shell for GIT-only SSH access[J
shortlog           -- summarize git log output[J
show               -- show various types of objects[J
show-branch        -- show branches and their commits[J
show-index         -- show packed archive index[J
show-ref           -- list references in a local repository[J
stash              -- stash away changes to dirty working directory[J
status             -- show working-tree status[J
stripspace         -- filter out empty lines[J
submodule          -- initialize, update, or inspect submodules[J
subtree            -- split repository into subtrees and merge them[J
svn                -- bidirectional operation between a Subversion repositor[J
symbolic-ref       -- read and modify symbolic references[J
tag                -- create, list, delete or verify tag object signed with[J
unpack-file        -- create temporary file with blob's contents[J
unpack-objects     -- unpack objects from packed archive[J
update-index       -- register file contents in the working directory to the[J
update-ref         -- update object name stored in a reference safely[J
update-server-info -- update auxiliary information file to help dumb servers[J
upload-archive     -- send archive back to git-archive[J
upload-pack        -- send objects packed back to git fetch-pack[J
var                -- show git logical variable[J
verify-commit      -- check GPG signature of commits[J
verify-pack        -- validate packed git archive files[J
verify-tag         -- check GPG signature of tags[J
whatchanged        -- show commit-logs and differences they introduce[J
worktree           -- manage multiple working dirs attached to the same repo[J
write-tree         -- create tree from the current index[J
[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0mgit[K[1Cadd
[7madd                -- add file contents to index[K[0m[K
am                 -- apply patches from a mailbox[K[K
apply              -- apply patch to files and/or to index[K[K
archimport         -- import an Arch repository into git[K[K
archive            -- create archive of files from named tree[K[K
bisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
[Jcommit-tree        -- create new commit object[K[J[J[23A[0m[27m[24m[0m[39m[2Cgit add[K[0m[39m
[7madd                -- add file contents to index[K[0m[7madd                -- add file contents to index[K[0m[A[0m[27m[24m[0m[39m[2Cgit add[K[0m[39mm 
[0madd                -- add file contents to index[K[1B[7mam                 -- apply patches from a mailbox[K[0m[A[A[0m[27m[24m[0m[39m[2Cgit am[K[0m[39mpply
[1B[0mam                 -- apply patches from a mailbox[K[1B[7mapply              -- apply patch to files and/or to index[K[0m[3A[0m[27m[24m[0m[39m[2Cgit apply[K[0m[39mrchimport
[2B[0mapply              -- apply patch to files and/or to index[K[1B[7marchimport         -- import an Arch repository into git[K[0m[4A[0m[27m[24m[0m[39m[2Cgit archimport[K[0m[39mve   
[3B[0marchimport         -- import an Arch repository into git[K[1B[7marchive            -- create archive of files from named tree[K[0m[5A[0m[27m[24m[0m[39m[2Cgit archive[K[0m[39mbisect 
[4B[0marchive            -- create archive of files from named tree[K[1B[7mbisect             -- find, by binary search, change that introduced a bug[K[0m[6A[0m[27m[24m[0m[39m[2Cgit bisect[K[0m[39mlame 
[5B[0mbisect             -- find, by binary search, change that introduced a bug[K[1B[7mblame              -- show what revision and author last modified each line[K[0m[7A[0m[27m[24m[0m[39m[2Cgit blame[K[0m[39mranch
[6B[0mblame              -- show what revision and author last modified each line[K[1B[7mbranch             -- list, create, or delete branches[K[0m[8A[0m[27m[24m[0m[39m[2Cgit branch[K[0m[39mundle
[7B[0mbranch             -- list, create, or delete branches[K[1B[7mbundle             -- move objects and refs by archive[K[0m[9A[0m[27m[24m[0m[39m[2Cgit bundle[K[0m[39mcat-file
[8B[0mbundle             -- move objects and refs by archive[K[1B[7mcat-file           -- provide content or type information for repository obj[K[0m[10A[0m[27m[24m[0m[39m[2Cgit cat-file[K[0m[39mheck-attr
[9B[0mcat-file           -- provide content or type information for repository obj[K[1B[7mcheck-attr         -- display gitattributes information[K[0m[11A[0m[27m[24m[0m[39m[2Cgit check-attr[K[0m[39mignore
[10B[0mcheck-attr         -- display gitattributes information[K[1B[7mcheck-ignore       -- debug gitignore/exclude files[K[0m[12A[0m[27m[24m[0m[39m[2Cgit check-ignore[K[0m[39mmailmap
[11B[0mcheck-ignore       -- debug gitignore/exclude files[K[1B[7mcheck-mailmap      -- show canonical names and email addresses of contacts[K[0m[13A[0m[27m[24m[0m[39m[2Cgit check-mailmap[K[0m[39mref-format
[12B[0mcheck-mailmap      -- show canonical names and email addresses of contacts[K[1B[7mcheck-ref-format   -- ensure that a reference name is well formed[K[0m[14A[0m[27m[24m[0m[39m[2Cgit check-ref-format[K[0m[39m[11Dout        [8D
[13B[0mcheck-ref-format   -- ensure that a reference name is well formed[K[1B[7mcheckout           -- checkout branch or paths to working tree[K[0m[15A[0m[27m[24m[0m[39m[2Cgit checkout[K[0m[39m-index
[14B[0mcheckout           -- checkout branch or paths to working tree[K[1B[7mcheckout-index     -- copy files from index to working directory[K[0m[16A[0m[27m[24m[0m[39m[2Cgit checkout-index[K[0m[39m[11Drry        [8D
[15B[0mcheckout-index     -- copy files from index to working directory[K[1B[7mcherry             -- find commits not merged upstream[K[0m[17A[0m[27m[24m[0m[39m[2Cgit cherry[K[0m[39m-pick
[16B[0mcherry             -- find commits not merged upstream[K[1B[7mcherry-pick        -- apply changes introduced by some existing commits[K[0m[18A[0m[27m[24m[0m[39m[2Cgit cherry-pick[K[0m[39m[10Ditool     
[17B[0mcherry-pick        -- apply changes introduced by some existing commits[K[1B[7mcitool             -- graphical alternative to git commit[K[0m[19A[0m[27m[24m[0m[39m[2Cgit citool[K[0m[39mlean 
[18B[0mcitool             -- graphical alternative to git commit[K[1B[7mclean              -- remove untracked files from working tree[K[0m[20A[0m[27m[24m[0m[39m[2Cgit clean[K[0m[39mone
[19B[0mclean              -- remove untracked files from working tree[K[1B[7mclone              -- clone repository into new directory[K[0m[21A[0m[27m[24m[0m[39m[2Cgit clone[K[0m[39mommit
[20B[0mclone              -- clone repository into new directory[K[1B[7mcommit             -- record changes to repository[K[0m[22A[0m[27m[24m[0m[39m[2Cgit commit[K[0m[39m-tree
[21B[0mcommit             -- record changes to repository[K[1B[7mcommit-tree        -- create new commit object[K[0m[23A[0m[27m[24m[0m[39m[2Cgit commit-tree[K[0m[39m[9Dnfig     
[0mam                 -- apply patches from a mailbox[K[K
apply              -- apply patch to files and/or to index[K[K
archimport         -- import an Arch repository into git[K[K
archive            -- create archive of files from named tree[K[K
bisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
[Jcommit-tree        -- create new commit object[K[J[K
[7mconfig             -- get and set repository or global options[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit config[K[0m[39munt-objects
[0mapply              -- apply patch to files and/or to index[K[K
archimport         -- import an Arch repository into git[K[K
archive            -- create archive of files from named tree[K[K
bisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
[Jconfig             -- get and set repository or global options[K[J[K
[7mcount-objects      -- count unpacked objects and display their disk consumpt[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit count-objects[K[0m[39m[12Dvsexportcommit
[0marchimport         -- import an Arch repository into git[K[K
archive            -- create archive of files from named tree[K[K
bisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
[Jcount-objects      -- count unpacked objects and display their disk consumpt[K[J[K
[7mcvsexportcommit    -- export a single commit to a CVS checkout[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit cvsexportcommit[K[0m[39m[12Dim[4C      
[0marchive            -- create archive of files from named tree[K[K
bisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
[Jcvsexportcommit    -- export a single commit to a CVS checkout[K[J[K
[7mcvsimport          -- import a CVS "repository" into a git repository[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit cvsimport[K[0m[39mserver
[0mbisect             -- find, by binary search, change that introduced a bug[K[K
blame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
[Jcvsimport          -- import a CVS "repository" into a git repository[K[J[K
[7mcvsserver          -- run a CVS server emulator for git[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit cvsserver[K[0m[39m[9Ddaemon   
[0mblame              -- show what revision and author last modified each line[K[K
branch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
[Jcvsserver          -- run a CVS server emulator for git[K[J[K
[7mdaemon             -- run a really simple server for git repositories[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit daemon[K[0m[39mescribe
[0mbranch             -- list, create, or delete branches[K[K
bundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
[Jdaemon             -- run a really simple server for git repositories[K[J[K
[7mdescribe           -- show most recent tag that is reachable from a commit[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit describe[K[0m[39miff    
[0mbundle             -- move objects and refs by archive[K[K
cat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
[Jdescribe           -- show most recent tag that is reachable from a commit[K[J[K
[7mdiff               -- show changes between commits, commit and working tree,[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit diff[K[0m[39m-files
[0mcat-file           -- provide content or type information for repository obj[K[K
check-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
[Jdiff               -- show changes between commits, commit and working tree,[K[J[K
[7mdiff-files         -- compare files in working tree and index[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit diff-files[K[0m[39mindex
[0mcheck-attr         -- display gitattributes information[K[K
check-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
[Jdiff-files         -- compare files in working tree and index[K[J[K
[7mdiff-index         -- compare content and mode of blobs between index and re[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit diff-index[K[0m[39mtree 
[0mcheck-ignore       -- debug gitignore/exclude files[K[K
check-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
[Jdiff-index         -- compare content and mode of blobs between index and re[K[J[K
[7mdiff-tree          -- compare content and mode of blobs found via two tree o[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit diff-tree[K[0m[39mtool 
[0mcheck-mailmap      -- show canonical names and email addresses of contacts[K[K
check-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
[Jdiff-tree          -- compare content and mode of blobs found via two tree o[K[J[K
[7mdifftool           -- show changes using common diff tools[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit difftool[K[0m[39m[8Dfast-export
[0mcheck-ref-format   -- ensure that a reference name is well formed[K[K
checkout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
[Jdifftool           -- show changes using common diff tools[K[J[K
[7mfast-export        -- data exporter[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fast-export[K[0m[39mim[4C
[0mcheckout           -- checkout branch or paths to working tree[K[K
checkout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
[Jfast-export        -- data exporter[K[J[K
[7mfast-import        -- import information into git directly[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fast-import[K[0m[39m[10Detch      
[0mcheckout-index     -- copy files from index to working directory[K[K
cherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
[Jfast-import        -- import information into git directly[K[J[K
[7mfetch              -- download objects and refs from another repository[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fetch[K[0m[39m-pack
[0mcherry             -- find commits not merged upstream[K[K
cherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
[Jfetch              -- download objects and refs from another repository[K[J[K
[7mfetch-pack         -- receive missing objects from another repository[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fetch-pack[K[0m[39m[9Dilter-branch
[0mcherry-pick        -- apply changes introduced by some existing commits[K[K
citool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
[Jfetch-pack         -- receive missing objects from another repository[K[J[K
[7mfilter-branch      -- rewrite branches[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit filter-branch[K[0m[39m[12Dmt-merge-msg
[0mcitool             -- graphical alternative to git commit[K[K
clean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
[Jfilter-branch      -- rewrite branches[K[J[K
[7mfmt-merge-msg      -- produce merge commit message[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fmt-merge-msg[K[0m[39m[12Dor-each-ref 
[0mclean              -- remove untracked files from working tree[K[K
clone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
[Jfmt-merge-msg      -- produce merge commit message[K[J[K
[7mfor-each-ref       -- output information on each ref[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit for-each-ref[K[0m[39m[9Dmat-patch
[0mclone              -- clone repository into new directory[K[K
commit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
[Jfor-each-ref       -- output information on each ref[K[J[K
[7mformat-patch       -- prepare patches for e-mail submission[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit format-patch[K[0m[39m[11Dsck        [8D
[0mcommit             -- record changes to repository[K[K
commit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
[Jformat-patch       -- prepare patches for e-mail submission[K[J[K
[7mfsck               -- verify connectivity and validity of objects in databas[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit fsck[K[0m[39mgc  
[0mcommit-tree        -- create new commit object[K[K
config             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
[Jfsck               -- verify connectivity and validity of objects in databas[K[J[K
[7mgc                 -- cleanup unnecessary files and optimize local repositor[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit gc[K[0m[39met-tar-commit-id
[0mconfig             -- get and set repository or global options[K[K
count-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
[Jgc                 -- cleanup unnecessary files and optimize local repositor[K[J[K
[7mget-tar-commit-id  -- extract commit ID from an archive created using git ar[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit get-tar-commit-id[K[0m[39m[16Drep             [13D
[0mcount-objects      -- count unpacked objects and display their disk consumpt[K[K
cvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
[Jget-tar-commit-id  -- extract commit ID from an archive created using git ar[K[J[K
[7mgrep               -- print lines matching a pattern[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit grep[K[0m[39mui 
[0mcvsexportcommit    -- export a single commit to a CVS checkout[K[K
cvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
[Jgrep               -- print lines matching a pattern[K[J[K
[7mgui                -- run portable graphical interface to git[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit gui[K[0m[39mhash-object
[0mcvsimport          -- import a CVS "repository" into a git repository[K[K
cvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
[Jgui                -- run portable graphical interface to git[K[J[K
[7mhash-object        -- compute object ID and optionally create a blob from a[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit hash-object[K[0m[39m[10Delp       
[0mcvsserver          -- run a CVS server emulator for git[K[K
daemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
[Jhash-object        -- compute object ID and optionally create a blob from a[K[J[K
[7mhelp               -- display help information about git[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit help[K[0m[39mttp-backend
[0mdaemon             -- run a really simple server for git repositories[K[K
describe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
[Jhelp               -- display help information about git[K[J[K
[7mhttp-backend       -- run a server side implementation of Git over HTTP[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit http-backend[K[0m[39mfetch  
[0mdescribe           -- show most recent tag that is reachable from a commit[K[K
diff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
[Jhttp-backend       -- run a server side implementation of Git over HTTP[K[J[K
[7mhttp-fetch         -- download from remote git repository via HTTP[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit http-fetch[K[0m[39mpush 
[0mdiff               -- show changes between commits, commit and working tree,[K[K
diff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
[Jhttp-fetch         -- download from remote git repository via HTTP[K[J[K
[7mhttp-push          -- push objects over HTTP/DAV to another repository[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit http-push[K[0m[39m[9Dima[2Csend
[0mdiff-files         -- compare files in working tree and index[K[K
diff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
[Jhttp-push          -- push objects over HTTP/DAV to another repository[K[J[K
[7mimap-send          -- send a collection of patches to an IMAP folder[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit imap-send[K[0m[39m[8Dndex-pack
[0mdiff-index         -- compare content and mode of blobs between index and re[K[K
diff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
[Jimap-send          -- send a collection of patches to an IMAP folder[K[J[K
[7mindex-pack         -- build pack index file for an existing packed archive[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit index-pack[K[0m[39m[8Dit      
[0mdiff-tree          -- compare content and mode of blobs found via two tree o[K[K
difftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
[Jindex-pack         -- build pack index file for an existing packed archive[K[J[K
[7minit               -- create empty git repository or re-initialize an existi[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit init[K[0m[39mstaweb
[0mdifftool           -- show changes using common diff tools[K[K
fast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
[Jinit               -- create empty git repository or re-initialize an existi[K[J[K
[7minstaweb           -- instantly browse your working repository in gitweb[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit instaweb[K[0m[39mterpret-trailers
[0mfast-export        -- data exporter[K[K
fast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
[Jinstaweb           -- instantly browse your working repository in gitweb[K[J[K
[7minterpret-trailers -- add or parse structured information in commit messages[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit interpret-trailers[K[0m[39m[18Dlog               [15D
[0mfast-import        -- import information into git directly[K[K
fetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
[Jinterpret-trailers -- add or parse structured information in commit messages[K[J[K
[7mlog                -- show commit logs[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit log[K[0m[39ms-files
[0mfetch              -- download objects and refs from another repository[K[K
fetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
[Jlog                -- show commit logs[K[J[K
[7mls-files           -- information about files in index/working directory[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit ls-files[K[0m[39mremote
[0mfetch-pack         -- receive missing objects from another repository[K[K
filter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
[Jls-files           -- information about files in index/working directory[K[J[K
[7mls-remote          -- show references in a remote repository[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit ls-remote[K[0m[39mtree  
[0mfilter-branch      -- rewrite branches[K[K
fmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
ls-files           -- information about files in index/working directory[K[K
[Jls-remote          -- show references in a remote repository[K[J[K
[7mls-tree            -- list contents of a tree object[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit ls-tree[K[0m[39mmailinfo
[0mfmt-merge-msg      -- produce merge commit message[K[K
for-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
ls-files           -- information about files in index/working directory[K[K
ls-remote          -- show references in a remote repository[K[K
[Jls-tree            -- list contents of a tree object[K[J[K
[7mmailinfo           -- extract patch and authorship from a single email messa[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit mailinfo[K[0m[39msplit
[0mfor-each-ref       -- output information on each ref[K[K
format-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
ls-files           -- information about files in index/working directory[K[K
ls-remote          -- show references in a remote repository[K[K
ls-tree            -- list contents of a tree object[K[K
[Jmailinfo           -- extract patch and authorship from a single email messa[K[J[K
[7mmailsplit          -- split mbox file into a list of files[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit mailsplit[K[0m[39m[8Derge    
[0mformat-patch       -- prepare patches for e-mail submission[K[K
fsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
ls-files           -- information about files in index/working directory[K[K
ls-remote          -- show references in a remote repository[K[K
ls-tree            -- list contents of a tree object[K[K
mailinfo           -- extract patch and authorship from a single email messa[K[K
[Jmailsplit          -- split mbox file into a list of files[K[J[K
[7mmerge              -- join two or more development histories together[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit merge[K[0m[39m-base
[0mfsck               -- verify connectivity and validity of objects in databas[K[K
gc                 -- cleanup unnecessary files and optimize local repositor[K[K
get-tar-commit-id  -- extract commit ID from an archive created using git ar[K[K
grep               -- print lines matching a pattern[K[K
gui                -- run portable graphical interface to git[K[K
hash-object        -- compute object ID and optionally create a blob from a[K[K
help               -- display help information about git[K[K
http-backend       -- run a server side implementation of Git over HTTP[K[K
http-fetch         -- download from remote git repository via HTTP[K[K
http-push          -- push objects over HTTP/DAV to another repository[K[K
imap-send          -- send a collection of patches to an IMAP folder[K[K
index-pack         -- build pack index file for an existing packed archive[K[K
init               -- create empty git repository or re-initialize an existi[K[K
instaweb           -- instantly browse your working repository in gitweb[K[K
interpret-trailers -- add or parse structured information in commit messages[K[K
log                -- show commit logs[K[K
ls-files           -- information about files in index/working directory[K[K
ls-remote          -- show references in a remote repository[K[K
ls-tree            -- list contents of a tree object[K[K
mailinfo           -- extract patch and authorship from a single email messa[K[K
mailsplit          -- split mbox file into a list of files[K[K
[Jmerge              -- join two or more development histories together[K[J[K
[7mmerge-base         -- find as good a common ancestor as possible for a merge[K[0m[J[J[23A[0m[27m[24m[0m[39m[2Cgit merge-base[K[0m[39m
[J[A[16C[1m [0m[0m           checkout master[?1l>[?2004l
[J]2;git checkout master]1;giterror: pathspec 'master' did not match any file(s) known to git
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit checkout master      branch[?1l>[?2004l
]2;git checkout branch]1;gitAlready on 'branch'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit checkout branch      Master[?1l>[?2004l
]2;git checkout Master]1;giterror: pathspec 'Master' did not match any file(s) known to git
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit checkout Master[19D                   [19Dccd ..[?1l>[?2004l
]2;cd ..]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsawk_comm.sh  grades.txt  lab3.sh     marks.txt
card.txt     hamlet.txt  [0m[01;34mlocal-repo[0m  typescript
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd local-repo[1m/[0m[0m [?1l>[?2004l
]2;cd local-repo]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkout master          kout -b master[?1l>[?2004l
]2;git checkout -b master]1;gitSwitched to a new branch 'master'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsbar.txt  foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccheckout master[?1l>[?2004l
]2;checkout master]1;checkoutzsh: command not found: checkout
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hcheckout mastergcheckout master[15Dgicheckout master[15Dtcheckout master[15D checkout master[15D[?1l>[?2004l
]2;git checkout master]1;gitAlready on 'master'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsbar.txt  foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkout branch[?1l>[?2004l
]2;git checkout branch]1;gitSwitched to branch 'branch'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit checkout branch[19Dls                 [17Dgit checkout branch      master[?1l>[?2004l
]2;git checkout master]1;gitSwitched to branch 'master'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit mergwe  e branch[1m [0m[0m [?1l>[?2004l
]2;git merge branch]1;gitAlready up to date.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit merge branch[16D                [16Dggit add [?1l>[?2004l
]2;git add]1;gitNothing specified, nothing added.
Maybe you wanted to say 'git add .'?
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit commit -m "New Commit"[?1l>[?2004l
]2;git commit -m "New Commit"]1;gitOn branch master
nothing to commit, working tree clean
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hccd ..[?1l>[?2004l
]2;cd ..]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;lsawk_comm.sh  grades.txt  lab3.sh     marks.txt
card.txt     hamlet.txt  [0m[01;34mlocal-repo[0m  typescript
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hrrm l
[J[0mlab3.sh      [J[01;34mlocal-repo[0m/[J[A[0m[27m[24m[0m[39m[2Crm l[K[0m[39mocal-repo[1m/[0m[0m [?1l>[?2004l
[J]2;rm local-repo]1;rmrm: cannot remove 'local-repo': Is a directory
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hrm local-repo-local-repo[10Drlocal-repo[10Dflocal-repo[10Dflocal-repo[10D[P[10C [11D local-repo[10D[?1l>[?2004l
]2;rm -rf local-repo]1;rm[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi lo  v  c mmkdir local-repo[?1l>[?2004l
]2;mkdir local-repo]1;mkdir[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd local-repo[1m/[0m[0m [?1l>[?2004l
]2;cd local-repo]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlab/iss/local-repo[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlab/iss/local-repo[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit init[?1l>[?2004l
]2;git init]1;gitInitialized empty Git repository in /home/blizzard/Documents/lab/iss/local-repo/.git/
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi v  vvi foo.txt[?1l>[?2004l
]2;vim foo.txt]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"foo.txt" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 foo.txt [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                                [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [m[38;5;252m[48;5;234m[2;1H[38;5;242m 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[3;2H[38;5;69m[48;5;233m~                                                                              [4;2H~                                                                              [5;2H~                                                                              [6;2H~                                                                              [7;2H~                                                                              [8;2H~                                                                              [9;2H~                                                                              [10;2H~                                                                              [11;2H~                                                                              [12;2H~                                                                              [13;2H~                                                                              [14;2H~                                                                              [15;2H~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m master   foo.txt [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                    [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m 100% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   0:1  [2;2H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[24;1H[38;5;252m[48;5;18m-- INSERT --[m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;119m INSERT [m[38;5;252m[48;5;234m[38;5;119m[48;5;240m [2;2H[?25h[m[38;5;252m[48;5;234m[1;12H[38;5;252m[48;5;235m+ [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [?25l[m[38;5;252m[48;5;234m[2;2HM[22;28H[38;5;252m[48;5;240m  + [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[43C[38;5;238m[48;5;244m1:2[2;3H[?25h[?25l[m[38;5;252m[48;5;234ma[22;78H[38;5;238m[48;5;244m3[2;4H[?25h[?25l[m[38;5;252m[48;5;234ms[22;78H[38;5;238m[48;5;244m4[2;5H[?25h[?25l[m[38;5;252m[48;5;234mt[22;78H[38;5;238m[48;5;244m5[2;6H[?25h[?25l[m[38;5;252m[48;5;234me[22;78H[38;5;238m[48;5;244m6[2;7H[?25h[?25l[m[38;5;252m[48;5;234mr[22;78H[38;5;238m[48;5;244m7[2;8H[?25h[?2004h[?25l[22;78H8[2;9H[?25h[?25l[m[38;5;252m[48;5;234ml[22;78H[38;5;238m[48;5;244m9[2;10H[?25h[?25l[m[38;5;252m[48;5;234mo[22;78H[38;5;238m[48;5;244m10[2;11H[?25h[?25l[m[38;5;252m[48;5;234mc[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m2[2;13H[?25h[?25l[m[38;5;252m[48;5;234ml[22;79H[38;5;238m[48;5;244m3[2;14H[?25h[?2004h[?25l[22;79H4[2;15H[?25h[?25l[m[38;5;252m[48;5;234md[22;79H[38;5;238m[48;5;244m5[2;16H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m6[2;17H[?25h[?25l[m[38;5;252m[48;5;234mt[22;79H[38;5;238m[48;5;244m7[2;18H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m8[2;19H[?25h[?2004h[?25l[m[38;5;252m[48;5;234m``[22;79H[38;5;238m[48;5;244m9[2;20H[?25h[m[38;5;252m[48;5;234m[24;1H[K[2;19H[?25l[23;1H[K[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[69C[38;5;238m[48;5;244m8[?25h[?25l7[2;18H[?25h[?25l[23;1H[m[38;5;252m[48;5;234m:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"foo.txt" [New] 1L, 20C written
[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m11s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [+][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit commit -m "First Commit"[?1l>[?2004l
]2;git commit -m "First Commit"]1;git[master (root-commit) 14078e8] First Commit
 1 file changed, 1 insertion(+)
 create mode 100644 foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkoi ut -m new_branch[?1l>[?2004l
]2;git checkout -m new_branch]1;giterror: pathspec 'new_branch' did not match any file(s) known to git
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit checkout -m new_branch[P[11C [12Db new_branch[11D[?1l>[?2004l
]2;git checkout -b new_branch]1;gitSwitched to a new branch 'new_branch'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  new_branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi bar.txt[?1l>[?2004l
]2;vim bar.txt]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"bar.txt" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 bar.txt [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                                [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [m[38;5;252m[48;5;234m[2;1H[38;5;242m 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[3;2H[38;5;69m[48;5;233m~                                                                              [4;2H~                                                                              [5;2H~                                                                              [6;2H~                                                                              [7;2H~                                                                              [8;2H~                                                                              [9;2H~                                                                              [10;2H~                                                                              [11;2H~                                                                              [12;2H~                                                                              [13;2H~                                                                              [14;2H~                                                                              [15;2H~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m new_branch   bar.txt [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m 100% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   0:1  [2;2H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[24;1H[38;5;252m[48;5;18m-- INSERT --[m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;119m INSERT [m[38;5;252m[48;5;234m[38;5;119m[48;5;240m [2;2H[?25h[m[38;5;252m[48;5;234m[1;12H[38;5;252m[48;5;235m+ [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [?25l[m[38;5;252m[48;5;234m[2;2HN[22;32H[38;5;252m[48;5;240m  + [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[39C[38;5;238m[48;5;244m1:2[2;3H[?25h[?25l[m[38;5;252m[48;5;234me[22;78H[38;5;238m[48;5;244m3[2;4H[?25h[?25l[m[38;5;252m[48;5;234mw[22;78H[38;5;238m[48;5;244m4[2;5H[?25h[?2004h[?25l[22;78H5[2;6H[?25h[?25l[m[38;5;252m[48;5;234mb[22;78H[38;5;238m[48;5;244m6[2;7H[?25h[?25l[m[38;5;252m[48;5;234mr[22;78H[38;5;238m[48;5;244m7[2;8H[?25h[?25l[m[38;5;252m[48;5;234ma[22;78H[38;5;238m[48;5;244m8[2;9H[?25h[?25l[m[38;5;252m[48;5;234mn[22;78H[38;5;238m[48;5;244m9[2;10H[?25h[?25l[m[38;5;252m[48;5;234mc[22;78H[38;5;238m[48;5;244m10[2;11H[?25h[?25l[m[38;5;252m[48;5;234mh[22;79H[38;5;238m[48;5;244m1[2;12H[?25h[?2004h[?25l[22;79H2[2;13H[?25h[?25l[m[38;5;252m[48;5;234md[22;79H[38;5;238m[48;5;244m3[2;14H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m4[2;15H[?25h[?25l[m[38;5;252m[48;5;234mt[22;79H[38;5;238m[48;5;244m5[2;16H[?25h[?25l[m[38;5;252m[48;5;234ma[22;79H[38;5;238m[48;5;244m6[2;17H[?25h[m[38;5;252m[48;5;234m[24;1H[K[2;16H[?25l[23;1H[K[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[69C[38;5;238m[48;5;244m5[2;16H[?25h[?25l[?25h[?25l[23;1H[m[38;5;252m[48;5;234m:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bar.txt" [New] 1L, 16C written
[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  new_branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m22s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit commit -a -a m ""F"e"a"t"u"r"e" "C"o"m"m"i"t"[?1l>[?2004l
]2;git commit -a -m "Feature Commit"]1;gitOn branch new_branch
Untracked files:
	[31mbar.txt[m

nothing added to commit but untracked files present
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  new_branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit commit -a -m "Feature Commit"[33D                                 [33Dggit add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  new_branch[0m[35m[39m[1m[0m[1m[0m[1m[31m [+][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit add .commit -a -m "Feature Commit"[?1l>[?2004l
]2;git commit -a -m "Feature Commit"]1;git[new_branch 8551700] Feature Commit
 1 file changed, 1 insertion(+)
 create mode 100644 bar.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  new_branch[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit checkout master[?1l>[?2004l
]2;git checkout master]1;gitSwitched to branch 'master'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit merge --no-ff 
[0mHEAD        master      new_branch
[J[0m8551700  -- [8551700] Feature Commit (25 seconds ago)[J[A[A[0m[27m[24m[0m[39m[2Cgit merge --no-ff[K[0m[39m[1CHEAD
[7mHEAD      [0m  master      new_branch[K
[J[0m8551700  -- [8551700] Feature Commit (26 seconds ago)[K[J[A[A[0m[27m[24m[0m[39m[2Cgit merge --no-ff HEAD[K[0m[39m
[7mHEAD      [0m  [7mHEAD      [0m  [A[0m[27m[24m[0m[39m[2Cgit merge --no-ff HEAD[K[0m[39mmaster
[12C[7mmaster    [0m  HEAD        [A[0m[27m[24m[0m[39m[2Cgit merge --no-ff master[K[0m[39mnew_branch
[24C[7mnew_branch[0m[12Cmaster      [A[0m[27m[24m[0m[39m[2Cgit merge --no-ff new_branch[K[0m[39m
[J[A[30C[1m [0m[0m [?1l>[?2004l
[J]2;git merge --no-ff new_branch]1;githint: Waiting for your editor to close the file... [?1049h[22;0;0t[1;24r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[22;33H(B[0;7m[ Reading File ](B[m[22;39H(B[0;7m 7 lines ](B[m[H(B[0;7m      /home/blizzard/Documents/lab/iss/local-repo/.git/MERGE_MSG                [1;79H(B[m[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[22d[3d[39;49m(B[mMerge branch 'new_branch'[5d# Please enter a commit message to explain why this merge is necessary,[6d# especially if it merges an updated upstream into a topic branch.[7d#[8d# Lines starting with '#' will be ignored, and an empty message aborts[9d# the commit.[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;71H(B[0;7mModified(B[m[10dN[?12l[?25h[?25le[?12l[?25h[?25lw[?12l[?25h[?25l [?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lm[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25l[22d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                   [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[22;63H[?12l[?25h[?25l[23d(B[0;7m^G(B[m Get Help[23;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[23;61H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[24;61H(B[0;7m^T(B[m To Files[22d(B[0;7mFile Name to Write: /home/blizzard/Documents/lab/iss/local-repo/.git/MERGE_MSG(B[m[79G[?12l[?25h[?25l[K[1;79H[1;71H(B[0;7m        (B[m[22;32H(B[0;7m[ Wrote 8 lines ](B[m[J[24;80H[?12l[?25h[24;1H[?1049l[23;0;0t[?1l>[KMerge made by the 'recursive' strategy.
 bar.txt | 1 [32m+[m
 1 file changed, 1 insertion(+)
 create mode 100644 bar.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m14s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit pu
[0mpull -- fetch from and merge with another repository or local branch
[Jpush -- update remote refs along with associated objects[J[A[A[0m[27m[24m[0m[39m[2Cgit pu[K[0m[39msh[1m [0m[0m 
[J[0mbar.txt        foo.txt        ip6-loopback                             
[Jfarz           [Jip6-localhost  [Jlocalhost      [J                          [A[A[0m[27m[24m[0m[39m[2Cgit push[K[0m[39m[1C. 
[J[J[0mHEAD        [Jmaster      [Jnew_branch  [JORIG_HEAD [J[A[0m[27m[24m[0m[39m[2Cgit push .[K[0m[39m[1CHEAD
[J[7mHEAD      [0m  [Jmaster      [Jnew_branch  [JORIG_HEAD [J[A[0m[27m[24m[0m[39m[2Cgit push . HEAD[K[0m[39m
[7mHEAD      [0m  [7mHEAD      [0m  [A[0m[27m[24m[0m[39m[2Cgit push . HEAD[K[0m[39mmaster
[12C[7mmaster    [0m  HEAD        [A[0m[27m[24m[0m[39m[2Cgit push . master[K[0m[39m
[J[A[19C[1m [0m[0m [?1l>[?2004l
[J]2;git push . master]1;gitEverything up-to-date
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hgit push . master       origin master[?1l>[?2004l
]2;git push origin master]1;gitfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hl git push origin master                 g  lls[?1l>[?2004l
]2;ls --color=tty]1;lsbar.txt  foo.txt
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss/local-repo]1;..ss/local-repo[0m[27m[24m[J
[1m[0m[1m[36mlocal-repo[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlsgit push origin master[13D. master     [13Dmerge --no-ff new_branch                       g  ccd[?1l>[?2004l
]2;cd]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~]1;~[0m[27m[24m[J
[1m[0m[1m[36m~[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd git_projects[1m/[0m[0m [?1l>[?2004l
]2;cd git_projects]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[0m[01;34mdash[0m  [01;34mi3wm-themer[0m  [01;34mpacman[0m  [01;34mSanFranciscoFont[0m
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit itn i     g  ggit push origin[?1l>[?2004l
]2;git push origin]1;gitfatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push origin[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C mastee r-origin master[13D-origin master[13Dsorigin master[13Deorigin master[13Dtorigin master[13D-origin master[13Duorigin master[13Dporigin master[13Dsorigin master[13Dtorigin master[13Drorigin master[13Deorigin master[13Daorigin master[13Dmorigin master[13D origin master[13D[?1l>[?2004l
]2;git push --set-upstream origin master]1;gitfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push --set-upstream origin master[37D                                     [37Dgit push --set-upstream origin master[37D                                     [37Dggit push[?1l>[?2004l
]2;git push]1;gitfatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push 
[01;34mdash[0m/              ip6-localhost      [01;34mpacman[0m/                             
farz               ip6-loopback       [01;34mSanFranciscoFont[0m/                   
[J[01;34mi3wm-themer[0m/       [Jlocalhost          [Jtoofishes          [J                 [3A[0m[27m[24m[0m[39m[2Cgit push[K[0m[39m[1C.[?1l>[?2004l
[J]2;git push .]1;gitfatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream . master

[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push .  --set-upstream origin master[28Dorigin                      [22D master[?1l>[?2004l
]2;git push origin master]1;gitfatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hggit add upstream[?1l>[?2004l
]2;git add upstream]1;gitfatal: pathspec 'upstream' did not match any files
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hggit branch[?1l>[?2004l
]2;git branch]1;git[?1049h[22;0;0t[?1h=* [32mmaster[m[m
[7m(END)[27m[K[K[?1l>[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m3s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit  g  ggit [ush      g  mman git[?1l>[?2004l
]2;man git]1;man[?1049h[22;0;0t[?1h=GIT(1)                            Git Manual                            GIT(1)[m
[m
[1mNAME[0m[m
       git - the stupid content tracker[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
           [--super-prefix=<path>][m
           <command> [<args>][m
[m
[1mDESCRIPTION[0m[m
       Git is a fast, scalable, distributed revision control system with an[m
       unusually rich command set that provides both high-level operations and[m
       full access to internals.[m
[m
       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
       introduction.[m
[m
       After you mastered the basic concepts, you can come back to this page[m
[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K/[Kpp[Kdd[Kaa[Ktt[K[K[K[K[Kuu[Kss[K[Kpp[Kss[Ktt[Krr[Kww[Kee[Kaa[Kmm[K[1;1HGIT(1)                            Git Manual                            GIT(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       git - the stupid content tracker[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
[8;1H           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
[9;1H           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
[10;1H           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
[11;1H           [--super-prefix=<path>][m
[12;1H           <command> [<args>][m
[13;1H[m
[14;1H[1mDESCRIPTION[0m[m
[15;1H       Git is a fast, scalable, distributed revision control system with an[m
[16;1H       unusually rich command set that provides both high-level operations and[m
[17;1H       full access to internals.[m
[18;1H[m
[19;1H       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
[20;1H       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
[21;1H       introduction.[m
[22;1H[m
[23;1H       After you mastered the basic concepts, you can come back to this page[m
[24;1H[1;1HGIT(1)                            Git Manual                            GIT(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       git - the stupid content tracker[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
[8;1H           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
[9;1H           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
[10;1H           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
[11;1H           [--super-prefix=<path>][m
[12;1H           <command> [<args>][m
[13;1H[m
[14;1H[1mDESCRIPTION[0m[m
[15;1H       Git is a fast, scalable, distributed revision control system with an[m
[16;1H       unusually rich command set that provides both high-level operations and[m
[17;1H       full access to internals.[m
[18;1H[m
[19;1H       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
[20;1H       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
[21;1H       introduction.[m
[22;1H[m
[23;1H       After you mastered the basic concepts, you can come back to this page[m
[24;1H[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K [KESCESC[KOO[KAA[K[K[7m Manual page git(1) line 1/1201 2% (press h for help or q to quit)[27m[K[K/[Kupstrweamw[Keam[K[1;1HGIT(1)                            Git Manual                            GIT(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       git - the stupid content tracker[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
[8;1H           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
[9;1H           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
[10;1H           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
[11;1H           [--super-prefix=<path>][m
[12;1H           <command> [<args>][m
[13;1H[m
[14;1H[1mDESCRIPTION[0m[m
[15;1H       Git is a fast, scalable, distributed revision control system with an[m
[16;1H       unusually rich command set that provides both high-level operations and[m
[17;1H       full access to internals.[m
[18;1H[m
[19;1H       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
[20;1H       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
[21;1H       introduction.[m
[22;1H[m
[23;1H       After you mastered the basic concepts, you can come back to this page[m
[24;1H[1;1HGIT(1)                            Git Manual                            GIT(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       git - the stupid content tracker[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
[8;1H           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
[9;1H           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
[10;1H           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
[11;1H           [--super-prefix=<path>][m
[12;1H           <command> [<args>][m
[13;1H[m
[14;1H[1mDESCRIPTION[0m[m
[15;1H       Git is a fast, scalable, distributed revision control system with an[m
[16;1H       unusually rich command set that provides both high-level operations and[m
[17;1H       full access to internals.[m
[18;1H[m
[19;1H       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
[20;1H       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
[21;1H       introduction.[m
[22;1H[m
[23;1H       After you mastered the basic concepts, you can come back to this page[m
[24;1H...skipping...
           Find commits yet to be applied to [7mupstream[27m.[m
[m
       [1mgit-diff-files[0m(1)[m
           Compares files in the working tree and the index.[m
[m
       [1mgit-diff-index[0m(1)[m
           Compare a tree to the working tree or index.[m
[m
       [1mgit-diff-tree[0m(1)[m
           Compares the content and mode of blobs found via two tree objects.[m
[m
       [1mgit-for-each-ref[0m(1)[m
           Output information on each ref.[m
[m
       [1mgit-get-tar-commit-id[0m(1)[m
           Extract commit ID from an archive created using git-archive.[m
[m
       [1mgit-ls-files[0m(1)[m
           Show information about files in the index and the working tree.[m
[m
       [1mgit-ls-remote[0m(1)[m
           List references in a remote repository.[m
[m
[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[K [KESCESC[KESCESC[K[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[K [KESCESC[Knn[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K [KESCESC[K//[K/[KEOF-ignore /[Kupstream[Kupstrweam[Kupstream[K[1;1H           Find commits yet to be applied to upstream.[m
[2;1H[m
[3;1H       [1mgit-diff-files[0m(1)[m
[4;1H           Compares files in the working tree and the index.[m
[5;1H[m
[6;1H       [1mgit-diff-index[0m(1)[m
[7;1H           Compare a tree to the working tree or index.[m
[8;1H[m
[9;1H       [1mgit-diff-tree[0m(1)[m
[10;1H           Compares the content and mode of blobs found via two tree objects.[m
[11;1H[m
[12;1H       [1mgit-for-each-ref[0m(1)[m
[13;1H           Output information on each ref.[m
[14;1H[m
[15;1H       [1mgit-get-tar-commit-id[0m(1)[m
[16;1H           Extract commit ID from an archive created using git-archive.[m
[17;1H[m
[18;1H       [1mgit-ls-files[0m(1)[m
[19;1H           Show information about files in the index and the working tree.[m
[20;1H[m
[21;1H       [1mgit-ls-remote[0m(1)[m
[22;1H           List references in a remote repository.[m
[23;1H[m
[24;1H[1;1H           Find commits yet to be applied to [7mupstream[27m.[m
[2;1H[m
[3;1H       [1mgit-diff-files[0m(1)[m
[4;1H           Compares files in the working tree and the index.[m
[5;1H[m
[6;1H       [1mgit-diff-index[0m(1)[m
[7;1H           Compare a tree to the working tree or index.[m
[8;1H[m
[9;1H       [1mgit-diff-tree[0m(1)[m
[10;1H           Compares the content and mode of blobs found via two tree objects.[m
[11;1H[m
[12;1H       [1mgit-for-each-ref[0m(1)[m
[13;1H           Output information on each ref.[m
[14;1H[m
[15;1H       [1mgit-get-tar-commit-id[0m(1)[m
[16;1H           Extract commit ID from an archive created using git-archive.[m
[17;1H[m
[18;1H       [1mgit-ls-files[0m(1)[m
[19;1H           Show information about files in the index and the working tree.[m
[20;1H[m
[21;1H       [1mgit-ls-remote[0m(1)[m
[22;1H           List references in a remote repository.[m
[23;1H[m
[24;1H[K[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K [KESCESC[KESCESC[K[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[K [KESCESC[KESCESC[K [K::[K^J^J[K[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[K/[Kupstream[K[1;1H           Find commits yet to be applied to upstream.[m
[2;1H[m
[3;1H       [1mgit-diff-files[0m(1)[m
[4;1H           Compares files in the working tree and the index.[m
[5;1H[m
[6;1H       [1mgit-diff-index[0m(1)[m
[7;1H           Compare a tree to the working tree or index.[m
[8;1H[m
[9;1H       [1mgit-diff-tree[0m(1)[m
[10;1H           Compares the content and mode of blobs found via two tree objects.[m
[11;1H[m
[12;1H       [1mgit-for-each-ref[0m(1)[m
[13;1H           Output information on each ref.[m
[14;1H[m
[15;1H       [1mgit-get-tar-commit-id[0m(1)[m
[16;1H           Extract commit ID from an archive created using git-archive.[m
[17;1H[m
[18;1H       [1mgit-ls-files[0m(1)[m
[19;1H           Show information about files in the index and the working tree.[m
[20;1H[m
[21;1H       [1mgit-ls-remote[0m(1)[m
[22;1H           List references in a remote repository.[m
[23;1H[m
[24;1H[1;1H           Find commits yet to be applied to [7mupstream[27m.[m
[2;1H[m
[3;1H       [1mgit-diff-files[0m(1)[m
[4;1H           Compares files in the working tree and the index.[m
[5;1H[m
[6;1H       [1mgit-diff-index[0m(1)[m
[7;1H           Compare a tree to the working tree or index.[m
[8;1H[m
[9;1H       [1mgit-diff-tree[0m(1)[m
[10;1H           Compares the content and mode of blobs found via two tree objects.[m
[11;1H[m
[12;1H       [1mgit-for-each-ref[0m(1)[m
[13;1H           Output information on each ref.[m
[14;1H[m
[15;1H       [1mgit-get-tar-commit-id[0m(1)[m
[16;1H           Extract commit ID from an archive created using git-archive.[m
[17;1H[m
[18;1H       [1mgit-ls-files[0m(1)[m
[19;1H           Show information about files in the index and the working tree.[m
[20;1H[m
[21;1H       [1mgit-ls-remote[0m(1)[m
[22;1H           List references in a remote repository.[m
[23;1H[m
[24;1H[K[7m Manual page git(1) line 482/1201 36% (press h for help or q to quit)[27m[K[K       [1mgit-ls-tree[0m(1)[m
[7m Manual page git(1) line 483/1201 36% (press h for help or q to quit)[27m[K[K           List the contents of a tree object.[m
[7m Manual page git(1) line 484/1201 36% (press h for help or q to quit)[27m[K[K/[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K/[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K [KESCESC[Knn[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[KEOF-ignore /[K[K[7mPattern not found  (press RETURN)[27m[24;1H[K[K [KESCESC[K::[K[7m Manual page git(1) line 484/1201 36% (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projectsq[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m31s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hq mman
[0mman                          manjaro-settings-manager   
mandb                        manpath                    
mandelbrot                   MANPATH                    
manjaro-application-utility  manywin                    
manjaro-documentation        manywin32                  
[Jmanjaro-hello                [J                           [6A[0m[27m[24m[0m[39m[2Cman[K[0m[39m 
[Jzsh: do you wish to see all 21680 possibilities (21680 lines)? g[J[A[0m[27m[24m[0m[39m[2Cman[K[0m[39m[1C30-systemd-environment-d-generator
[7m30-systemd-environment-d-generator                                         [0m[K
7z                                                                         [K
7za                                                                        [K
7zr                                                                        [K
a52dec                                                                     [K
a64l                                                                       [K
aa_attrs                                                                   [K
aa_autoinit                                                                [K
aa_autoinitkbd                                                             [K
aa_autoinitmouse                                                           [K
aa_close                                                                   [K
aa_createedit                                                              [K
aa_currentfont                                                             [K
aa_defparams                                                               [K
aa_defrenderparams                                                         [K
aa_displayrecommended                                                      [K
aa_dithernames                                                             [K
aa_drivers                                                                 [K
aa_edit                                                                    [K
aa_editkey                                                                 [K
aa_fastrender                                                              [K
aafire                                                                     [K
[Jaa_fonts                                                                   [J[J[23A[0m[27m[24m[0m[39m[2Cman 30-systemd-environment-d-generator[K[0m[39m
[7m30-systemd-environment-d-generator                                         [0m[7m30-systemd-environment-d-generator                                         [0m[A[0m[27m[24m[0m[39m[2Cman 30-systemd-environment-d-generator[K[0m[39m
[J[A[40C[1m [0m[0m  [?2004l
[J[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hman gitgit branchadd upstream[12Dbranch      [10Dman git          man gitgit branchadd upstream[12Dbranch      [10Dman git   [?1l>[?2004l
]2;man git]1;man[?1049h[22;0;0t[?1h=GIT(1)                            Git Manual                            GIT(1)[m
[m
[1mNAME[0m[m
       git - the stupid content tracker[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [--version] [--help] [-C <path>] [-c <name>=<value>][m
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path][m
           [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare][m
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>][m
           [--super-prefix=<path>][m
           <command> [<args>][m
[m
[1mDESCRIPTION[0m[m
       Git is a fast, scalable, distributed revision control system with an[m
       unusually rich command set that provides both high-level operations and[m
       full access to internals.[m
[m
       See [1mgittutorial[0m(7) to get started, then see [1mgiteveryday[0m(7) for a useful[m
       minimum set of commands. The [1mGit[0m [1mUserâ€™s[0m [1mManual[0m[1] has a more in-depth[m
       introduction.[m
[m
       After you mastered the basic concepts, you can come back to this page[m
[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K/[Kgg[Kii[Ktt[K  [K[K[K[K[K[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K[7m Manual page git(1) line 1 (press h for help or q to quit)[27m[K[K [K::[Kqq[K[?1l>[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects
[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m8s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[0m[01;34mdash[0m  [01;34mi3wm-themer[0m  [01;34mpacman[0m  [01;34mSanFranciscoFont[0m
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit clone [7mhttps://github.com/Blizzard57/C-pro-codes[27m[41D[27mh[27mt[27mt[27mp[27ms[27m:[27m/[27m/[27mg[27mi[27mt[27mh[27mu[27mb[27m.[27mc[27mo[27mm[27m/[27mB[27ml[27mi[27mz[27mz[27ma[27mr[27md[27m5[27m7[27m/[27mC[27m-[27mp[27mr[27mo[27m-[27mc[27mo[27md[27me[27ms[?1l>[?2004l
]2;git clone https://github.com/Blizzard57/C-pro-codes]1;gitCloning into 'C-pro-codes'...
remote: Enumerating objects: 27, done.[K
remote: Counting objects:   3% (1/27)   [Kremote: Counting objects:   7% (2/27)   [Kremote: Counting objects:  11% (3/27)   [Kremote: Counting objects:  14% (4/27)   [Kremote: Counting objects:  18% (5/27)   [Kremote: Counting objects:  22% (6/27)   [Kremote: Counting objects:  25% (7/27)   [Kremote: Counting objects:  29% (8/27)   [Kremote: Counting objects:  33% (9/27)   [Kremote: Counting objects:  37% (10/27)   [Kremote: Counting objects:  40% (11/27)   [Kremote: Counting objects:  44% (12/27)   [Kremote: Counting objects:  48% (13/27)   [Kremote: Counting objects:  51% (14/27)   [Kremote: Counting objects:  55% (15/27)   [Kremote: Counting objects:  59% (16/27)   [Kremote: Counting objects:  62% (17/27)   [Kremote: Counting objects:  66% (18/27)   [Kremote: Counting objects:  70% (19/27)   [Kremote: Counting objects:  74% (20/27)   [Kremote: Counting objects:  77% (21/27)   [Kremote: Counting objects:  81% (22/27)   [Kremote: Counting objects:  85% (23/27)   [Kremote: Counting objects:  88% (24/27)   [Kremote: Counting objects:  92% (25/27)   [Kremote: Counting objects:  96% (26/27)   [Kremote: Counting objects: 100% (27/27)   [Kremote: Counting objects: 100% (27/27), done.[K
remote: Compressing objects:   3% (1/26)   [Kremote: Compressing objects:   7% (2/26)   [Kremote: Compressing objects:  11% (3/26)   [Kremote: Compressing objects:  15% (4/26)   [Kremote: Compressing objects:  19% (5/26)   [Kremote: Compressing objects:  23% (6/26)   [Kremote: Compressing objects:  26% (7/26)   [Kremote: Compressing objects:  30% (8/26)   [Kremote: Compressing objects:  34% (9/26)   [Kremote: Compressing objects:  38% (10/26)   [Kremote: Compressing objects:  42% (11/26)   [Kremote: Compressing objects:  46% (12/26)   [Kremote: Compressing objects:  50% (13/26)   [Kremote: Compressing objects:  53% (14/26)   [Kremote: Compressing objects:  57% (15/26)   [Kremote: Compressing objects:  61% (16/26)   [Kremote: Compressing objects:  65% (17/26)   [Kremote: Compressing objects:  69% (18/26)   [Kremote: Compressing objects:  73% (19/26)   [Kremote: Compressing objects:  76% (20/26)   [Kremote: Compressing objects:  80% (21/26)   [Kremote: Compressing objects:  84% (22/26)   [Kremote: Compressing objects:  88% (23/26)   [Kremote: Compressing objects:  92% (24/26)   [Kremote: Compressing objects:  96% (25/26)   [Kremote: Compressing objects: 100% (26/26)   [Kremote: Compressing objects: 100% (26/26), done.[K
remote: Total 27 (delta 3), reused 0 (delta 0), pack-reused 0[K
Unpacking objects:   3% (1/27)   Unpacking objects:   7% (2/27)   Unpacking objects:  11% (3/27)   Unpacking objects:  14% (4/27)   Unpacking objects:  18% (5/27)   Unpacking objects:  22% (6/27)   Unpacking objects:  25% (7/27)   Unpacking objects:  29% (8/27)   Unpacking objects:  33% (9/27)   Unpacking objects:  37% (10/27)   Unpacking objects:  40% (11/27)   Unpacking objects:  44% (12/27)   Unpacking objects:  48% (13/27)   Unpacking objects:  51% (14/27)   Unpacking objects:  55% (15/27)   Unpacking objects:  59% (16/27)   Unpacking objects:  62% (17/27)   Unpacking objects:  66% (18/27)   Unpacking objects:  70% (19/27)   Unpacking objects:  74% (20/27)   Unpacking objects:  77% (21/27)   Unpacking objects:  81% (22/27)   Unpacking objects:  85% (23/27)   Unpacking objects:  88% (24/27)   Unpacking objects:  92% (25/27)   Unpacking objects:  96% (26/27)   Unpacking objects: 100% (27/27)   Unpacking objects: 100% (27/27), done.
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!?][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m2s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd cC-pro-codes[1m/[0m[0m [?1l>[?2004l
]2;cd C-pro-codes]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls'Beautiful Cuts'   LargeFactorial   README.md
'Hide And Seek'   'Minimum Value'   Tourist
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi README.md[1m [0m[0m [?1l>[?2004l
]2;vim README.md]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"README.md" 3L, 85C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 README.md [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                              [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [m[38;5;252m[48;5;234m[2;1H[38;5;242m [m[38;5;252m[48;5;234m#[38;5;219m C-pro-codes[m[38;5;252m[48;5;234m
[38;5;242m+[m[38;5;252m[48;5;234m[48;5;242m+--  2 lines: Codes for Cpro---------------------------------------------------[m[38;5;252m[48;5;234m[4;1H[38;5;242m 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[4;2H[38;5;69m[48;5;233m~                                                                              [5;2H~                                                                              [6;2H~                                                                              [7;2H~                                                                              [8;2H~                                                                              [9;2H~                                                                              [10;2H~                                                                              [11;2H~                                                                              [12;2H~                                                                              [13;2H~                                                                              [14;2H~                                                                              [15;2H~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m master   README.md [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                  [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m  33% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   1:1  [2;2H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[24;1H[38;5;252m[48;5;18m-- INSERT --[m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;119m INSERT [m[38;5;252m[48;5;234m[38;5;119m[48;5;240m [2;2H[?25h[m[38;5;252m[48;5;234m[22;78H[38;5;238m[48;5;244m2[2;3H[22;78H3[2;4H[22;78H4[2;5H[22;78H5[2;6H[22;78H6[2;7H[22;78H7[2;8H[22;78H8[2;9H[22;78H9[2;10H[22;78H10[2;11H[22;79H1[2;12H[22;79H2[2;13H[22;79H3[2;14H[22;79H4[2;15H[?2004h[m[38;5;252m[48;5;234m[1;14H[38;5;252m[48;5;235m+ [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [?25l[m[38;5;252m[48;5;234m

[38;5;242m-[m[38;5;252m[48;5;234m[3;2H[K[4;1H[38;5;242m|[m[38;5;252m[48;5;234mCodes for Cpro[4;16H[K[5;1H[38;5;242m|[m[38;5;252m[48;5;234mThis rep will provide all the codes done for cpro by me[5;57H[K[22;30H[38;5;252m[48;5;240m  + [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[33C[38;5;247m[48;5;240m50[m[38;5;252m[48;5;234m[6C[38;5;238m[48;5;244m2:1 [3;2H[?25h[?25l[m[38;5;252m[48;5;234mN[22;78H[38;5;238m[48;5;244m2[3;3H[?25h[?25l[m[38;5;252m[48;5;234me[22;78H[38;5;238m[48;5;244m3[3;4H[?25h[?25l[m[38;5;252m[48;5;234mw[22;78H[38;5;238m[48;5;244m4[3;5H[?25h[?2004h[?25l[22;78H5[3;6H[?25h[?25l[m[38;5;252m[48;5;234mC[22;78H[38;5;238m[48;5;244m6[3;7H[?25h[?25l[m[38;5;252m[48;5;234mo[22;78H[38;5;238m[48;5;244m7[3;8H[?25h[?25l[m[38;5;252m[48;5;234mm[22;78H[38;5;238m[48;5;244m8[3;9H[?25h[?25l[m[38;5;252m[48;5;234mm[22;78H[38;5;238m[48;5;244m9[3;10H[?25h[?25l[m[38;5;252m[48;5;234mi[22;78H[38;5;238m[48;5;244m10[3;11H[?25h[?25l[m[38;5;252m[48;5;234mt[22;79H[38;5;238m[48;5;244m1[3;12H[?25h[m[38;5;252m[48;5;234m[24;1H[K[3;11H[?25l[23;1H[K[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[69C[38;5;238m[48;5;244m0[3;11H[?25h[?25l[?25h[?25l[23;1H[m[38;5;252m[48;5;234m:[?2004h[?25hq[?25l[?25h[?25l[38;5;186m[48;5;88mE37: No write since last change
E162: No write since last change for buffer "README.md"[m[38;5;252m[48;5;234m
[38;5;16m[48;5;186mPress ENTER or type command to continue[?25h[?2004h[?25l[m[38;5;252m[48;5;234m[24;1H[K[24;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"README.md" 4L, 96C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[39;49m[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m10s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvi README.md[12D            [12Dccd ..[?1l>[?2004l
]2;cd ..]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit push [?1l>[?2004l
]2;git push]1;gitfatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hgit push     remote add origint                  g  ccd cC-pro-codes[1m/[0m[0m [?1l>[?2004l
]2;cd C-pro-codes]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes;[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004h;;s;  lls[?1l>[?2004l
]2;ls --color=tty]1;ls'Beautiful Cuts'   LargeFactorial   README.md
'Hide And Seek'   'Minimum Value'   Tourist
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit push origin master[?1l>[?2004l
]2;git push origin master]1;gitUsername for 'https://github.com': Blizzard57
Password for 'https://Blizzard57@github.com': 
Everything up-to-date
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects/C-pro-codes]1;..s/C-pro-codes[0m[27m[24m[J
[1m[0m[1m[36mC-pro-codes[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!][0m[31m[39m[1m[0m[0m[39m[1m [0m[1mtook [0m[1m[33m10s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hccd ..[?1l>[?2004l
]2;cd ..]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[0m[01;34mC-pro-codes[0m  [01;34mdash[0m  [01;34mi3wm-themer[0m  [01;34mpacman[0m  [01;34mSanFranciscoFont[0m
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/git_projects]1;~/git_projects[0m[27m[24m[J
[1m[0m[1m[36mgit_projects[0m[36m[39m[1m [0m[1mon [0m[1m[37m[1m[37m[0m[37m[1m[37m[35mî‚  master[0m[35m[39m[1m[0m[1m[0m[1m[31m [!?][0m[31m[39m[1m[0m[0m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hggit push origin master[13D             [13Dclone https://github.com/Blizzard57/C-pro-codes[47Dbranch                                         [41Dadd upstream[12Dbranch      add upstream[12Dbranch      clone https://github.com/Blizzard57/C-pro-codes[47Dpush                                           [42Dorigin master[18D                  [18D
zsh: do you wish to see all 130 possibilities (130 lines)? n[J[A[0m[27m[24m[0m[39m[2Cgit[K[0m[39m[1Cpush[?1l>[?2004l
[J]2;git push]1;gitfatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

[1m[7m%[27m[1m[0m                                               ##############-]  99%(3/3) installing telegram-desktop                  [######################] 100%
Optional dependencies for telegram-desktop
    libnotify: desktop notifications [installed]
    ttf-opensans: default Open Sans font family
:: Running post-transaction hooks...
(1/3) Updating icon theme caches...
(2/3) Arming ConditionNeedsUpdate...
(3/3) Updating the desktop file MIME type cache...
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m[1mtook [0m[1m[33m9m 40s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004h      t
zsh: do you wish to see all 229 possibilities (115 lines)? n[J[A[0m[27m[24m[0m[39m[2Ct[K[0m[39mtel
[J[J[0mtelinit  [Jtelnet   [Jtelnetd[J[A[0m[27m[24m[0m[39m[2Ctel[K[0m[39mq 
[J[J[0mtelinit  [Jtelnet   [Jtelnetd[J[A[0m[27m[24m[0m[39m[2Ctel[K[0m[39meq
[J[A[7C   t  sudo pacman -S telegram-desktop[[8D        [8D[23Dvi card.txt            [12D[11Dgrep -v "the" hamlet.txt | grep "to"
[K[A[38C[1B[K[A[38C[31D"^[P[P[16C             [14D[16Dly\|rea\|self" hamlet.txt[1B[K
[K[A[A[33C[1B[K[1B[K[A[A[33C[1B[K[1B[K[A[A[33C[1B[K[1B[K[A[A[33C[18D[6P[12C      [12D\|self" hamlet.txt[18D[6P[12C      [19D(ly[4C)" hamlet.txt[20Dly|rea[P[P[12C  [16D[4P[12C    [14D[s\?\-\,]" hamlet.txt[1B[K[A[29C[21D^(the)[3P[12C   [1B[K[A[26C[18D[s\?\-\,]" hamlet.txt[1B[K[A[29C[21D^(the)[3P[12C   [1B[K[A[26C[18D[^t][^h][^e]" hamlet.txt[24D^(the)[6P[12C      [18D[s\?\-\,]" hamlet.txt[1B[K[A[29C[21Dly[7P[12C       [1B[K[A[22C[12D|rea" hamlet.txt[18D(ly|rea)" hamlet.txt[20Dly\[4C[P[12C [12D\|self" hamlet.txt[1B[K[1B[K[A[A[33C[25D^the[9P[12C         [1B[K[1B[K[A[A[24C[17D-v "the" hamlet.txt | grep "to"                            g  eexit[?1l>[?2004l[1B[J]2;exit]1;exit
Script done on 2019-02-02 18:48:01+05:30 [COMMAND_EXIT_CODE="0"]
[0m/  [J[01;34mlab[0m/  [J[01;34moj[0m/ [J[A[0m[27m[24m[0m[39m[2Ccd Documents/[K[0m[39mCiS[1m/[0m
[J[7mCiS/[0m  [J[01;34mISS[0m/  [J[01;34mlab[0m/  [J[01;34moj[0m/ [J[A[0m[27m[24m[0m[39m[2Ccd Documents/CiS[1m/[0m[K[0m[39m
[7mCiS/[0m  [7mCiS/[0m  [A[0m[27m[24m[0m[39m[2Ccd Documents/CiS[1m/[0m[K[0m[39mIS[2C
[6C[7mISS/[0m  [01;34mCiS[0m/  [A[0m[27m[24m[0m[39m[2Ccd Documents/ISS[1m/[0m[K[0m[39mlab[1C
[12C[7mlab/[0m  [6C[01;34mISS[0m/  [A[0m[27m[24m[0m[39m[2Ccd Documents/lab[1m/[0m[K[0m[39m
[J[A[19C[0m/iss[1m/[0m[0m/local-repo[1m/[0m[0m            [?1l>[?2004l
[J]2;cd Documents/lab/iss]1;cd[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hvvi l
[J[0mlab3.sh      [J[01;34mlocal-repo[0m/[J[A[0m[27m[24m[0m[39m[2Cvi l[K[0m[39mab3.sh
[J[7mlab3.sh    [0m  [J[01;34mlocal-repo[0m/[J[A[0m[27m[24m[0m[39m[2Cvi lab3.sh[K[0m[39m
[7mlab3.sh    [0m  [7mlab3.sh    [0m  [A[0m[27m[24m[0m[39m[2Cvi lab3.sh[K[0m[39m
[J[A[12C[1m [0m[0m [?1l>[?2004l
[J]2;vim lab3.sh]1;vi[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[38;5;252m[48;5;234m[H[2J[?25l[23;1H"lab3.sh" 12L, 401C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[38;5;252m[48;5;235m 1 lab3.sh [m[38;5;252m[48;5;234m[38;5;235m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                                                [m[38;5;252m[48;5;234m[38;5;242m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;242m X [m[38;5;252m[48;5;234m[2;1H[38;5;242m [m[38;5;252m[48;5;234m[38;5;153mgrep[m[38;5;252m[48;5;234m [38;5;153m"[m[38;5;252m[48;5;234m[38;5;110mly[m[38;5;252m[48;5;234m[38;5;179m\|[m[38;5;252m[48;5;234m[38;5;110mrea[m[38;5;252m[48;5;234m[38;5;179m\|[m[38;5;252m[48;5;234m[38;5;110mself[m[38;5;252m[48;5;234m[38;5;153m"[m[38;5;252m[48;5;234m hamlet.txt
[38;5;242m [m[38;5;252m[48;5;234m[38;5;153mgrep[m[38;5;252m[48;5;234m [38;5;153m"[m[38;5;252m[48;5;234m[38;5;110m^[^T][m[38;5;252m[48;5;234m[38;5;153m"[m[38;5;252m[48;5;234m hamlet.txt
[38;5;242m [m[38;5;252m[48;5;234m[38;5;153mgrep[m[38;5;252m[48;5;234m [38;5;153m"[m[38;5;252m[48;5;234m[38;5;110m[s[m[38;5;252m[48;5;234m[38;5;179m\?\-\,[m[38;5;252m[48;5;234m[38;5;110m][m[38;5;252m[48;5;234m[38;5;153m"[m[38;5;252m[48;5;234m hamlet.txt
[38;5;242m [m[38;5;252m[48;5;234m[38;5;153mgrep[m[38;5;252m[48;5;234m [38;5;179m-v[m[38;5;252m[48;5;234m [38;5;153m"[m[38;5;252m[48;5;234m[38;5;110mthe[m[38;5;252m[48;5;234m[38;5;153m"[m[38;5;252m[48;5;234m hamlet.txt | [38;5;153mgrep[m[38;5;252m[48;5;234m [38;5;153m"[m[38;5;252m[48;5;234m[38;5;110mto[m[38;5;252m[48;5;234m[38;5;153m"[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;153msed[m[38;5;252m[48;5;234m  [38;5;153m'[m[38;5;252m[48;5;234m[38;5;110ms/[0-9][0-9][0-9][0-9]\ [0-9][0-9][0-9][0-9]\ [0-9][0-9]/#### #### ##/g[m[38;5;252m[48;5;234m[38;5;153m'[m[38;5;252m[48;5;234m  [7;1H[38;5;242m [m[38;5;252m[48;5;234mcard.txt [38;5;153m>[m[38;5;252m[48;5;234m cardOut.txt
[38;5;242m [m[38;5;252m[48;5;234mawk [38;5;153m'[m[38;5;252m[48;5;234m[38;5;110m{[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110mif ($1+$2+$3 > 240) grade="A";[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110melse if ($1+$2+$3 > 180) grade="B";[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110melse if ($1+$2+$3 > 120) grade="C";[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110melse grade="F";[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110m    print $0," : ",grade;[m[38;5;252m[48;5;234m
[38;5;242m [m[38;5;252m[48;5;234m[38;5;110m}[m[38;5;252m[48;5;234m[38;5;153m'[m[38;5;252m[48;5;234m marks.txt [38;5;153m>[m[38;5;252m[48;5;234m grades.txt
[38;5;242m 
 
 
 
 
 
 [m[38;5;252m[48;5;234m[15;2H[38;5;69m[48;5;233m~                                                                              [16;2H~                                                                              [17;2H~                                                                              [18;2H~                                                                              [19;2H~                                                                              [20;2H~                                                                              [21;2H~                                                                              [m[38;5;252m[48;5;234m[22;1H[38;5;238m[48;5;117m NORMAL [m[38;5;252m[48;5;234m[38;5;117m[48;5;240m [m[38;5;252m[48;5;234m[38;5;252m[48;5;240m lab3.sh [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;248m[48;5;238m                                             [m[38;5;252m[48;5;234m[38;5;240m[48;5;238m [m[38;5;252m[48;5;234m[38;5;247m[48;5;240m  66% [m[38;5;252m[48;5;234m[38;5;244m[48;5;240m [m[38;5;252m[48;5;234m[38;5;238m[48;5;244m   8:1  [10;2H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[m[38;5;252m[48;5;234m[23;1H[K[23;1H:[?2004h[?25hq[?25l[?25h[?25l
[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[23;1H[K[24;1H[?2004l[?1l>[?25h[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m[1mtook [0m[1m[33m46s[0m[33m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hhhistory[?1l>[?2004l
]2;omz_history]1;history    1  ls
    2  vi ~/.zshrc
    3  vim ~/.zshrc
    4  source ~/.zshrc
    5  ls
    6  git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"]
    7  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"\n\n
    8  vim ~/.zshrc
    9  source ~/.zshrc
   10  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"\n\n
   11  source ~/.zshrc
   12  cd /home/blizzard/.oh-my-zsh/custom/themes/spaceship-prompt\]
   13  source ~/.zshrc
   14  vim ~/.zshrc
   15  source ~/.zshrc
   16  cd ..
   17  cd -
   18  cd 
   19  ls
   20  git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"]
   21  rm $ZSH_CUSTOM/themes/spaceship-prompt\]
   22  rm -rf $ZSH_CUSTOM/themes/spaceship-prompt\]
   23  git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"]
   24  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"\n\n
   25  rm -rf $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   26  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"\n\n
   27  vim ~/.zshrc
   28  source ~/.zshrc
   29  vi /home/blizzard/.oh-my-zsh/themes/suvash.zsh-theme
   30  ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"\n\n
   31  rm -rf $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   32  source ~/.zshrc
   33  ln -s $ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   34  source ~/.zshrc
   35  rm -rf $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   36  cp $ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   37  cd $ZSH_CUSTOM/themes/spaceship-prompt
   38  git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"]
   39  cd $ZSH_CUSTOM/themes
   40  ls
   41  cd spaceship-prompt\]
   42  ls
   43  cd ..
   44  rename spaceship-prompt\] spaceship-prompt
   45  rename -r spaceship-prompt\] spaceship-prompt
   46  mv --help
   47  ls
   48  mkdir spaceship-prompt
   49  cd spaceship-prompt\]
   50  ls
   51  cp * ../spaceship-prompt
   52  cp -r * ../spaceship-prompt
   53  cd ..
   54  rm -r spaceship-prompt\]
   55  rm -rf spaceship-prompt\]
   56  ls
   57  cd spaceship-prompt
   58  ls
   59  cd ..
   60  ln -s $ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme $ZSH_CUSTOM/themes/spaceship.zsh-theme\n\n
   61  source ~/.zshrc
   62  ls
   63  cd ~/Downloads
   64  ls
   65  unzip arc-theme-master.zip
   66  ls
   67  cp arc-theme-master ~/.themes
   68  cp -r arc-theme-master ~/.themes
   69  cd
   70  ls
   71  _gcc Desktop
   72  gcc 
   73  sudo pacman -S base-devel
   74  df -h
   75  sudo pacman -S vscode
   76  sudo pacman -S emacs
   77  pinentry-emacs
   78  pinentry-emacs new
   79  emacs
   80  sl
   81  ls
   82  sudo pacman -S variety y
   83  sudo pacman -S variety
   84  variety
   85  cd Downloads
   86  sl
   87  ls
   88  pdf Periodic\ Properties\ Assignment_Ass-3.pdf
   89  sudo pacman -S atom
   90  atom
   91  ls
   92  yay gnome-shell-theme-super-flat-remix-git
   93  yay -S gnome-shell-theme-super-flat-remix-git
   94  yay -Ss gnome-shell-theme-super-flat-remix-git
   95  yay -Ss gnome-shell-theme-super-flat
   96  yay -Ss super-flat
   97  sudo pacman -S git-all
   98  sudo pacman -S git_all
   99  sudo pacman -Ss git
  100  ls
  101  cd ..
  102  ls
  103  cd ..
  104  ls
  105  rm -rf code-stable-1546901613
  106  rm -rf code-stable-1546901613.tar.gz
  107  ls
  108  exit
  109  la
  110  ll
  111  vim
  112  git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
  113  sh ~/.vim_runtime/install_awesome_vimrc.sh\n
  114  vim ~/.vimrc
  115  source ~/.vimrc
  116  vim ~/.vimrc
  117  source ~/.vimrc
  118  vim ~/.vimrc
  119  ls
  120  vim ~/.vimrc
  121  source ~/.vimrc
  122  l
  123  ls
  124  ll
  125  rm -r CoffeeScript Colors Files JavaScript Load Misc Shell Status VIM vimgrep Visual
  126  ls
  127  mv .vimrc ~/.vim/vimrc
  128  mv ~/.vimrc ~/.vim/vimrc
  129  mv ~/.gvimrc ~/.vim/gvimrc
  130  ln -s ~/.vim/vimrc ~/.vimrc
  131  cd ~/.vim
  132  git init
  133  git add .
  134  git commit -m "Initial commit"
  135  git config --global user.email "kalp77000@gmail.com"
  136  git config --global user.name "Blizzard57"
  137  git commit -m "Initial commit"
  138  ls
  139  mkdir ~/.vim/autoload
  140  ls
  141  cd ../Downloads/
  142  ls
  143  unzip pathogen.zip
  144  ls
  145  cp -r autoload ~/.vim
  146  ls
  147  cd ~/.vim
  148  ls
  149  cd autoload
  150  ls
  151  cd ..
  152  vim ~/.vimrc
  153  ls
  154  mkdir bundle
  155  ls
  156  cd bundle
  157  ks
  158  ls
  159  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  160  ;s
  161  ls
  162  cd ..
  163  ls
  164  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  165  git -f submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  166  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  167  ls
  168  cd bundle
  169  ls
  170  ll
  171  cd ..
  172  ll
  173  cd ..
  174  ll
  175  ls -a
  176  cd .steam
  177  cd ..
  178  vim .steamp
  179  vim .steampath
  180  vim .xinitrc
  181  ;s
  182  sls
  183  ls
  184  vim
  185  vim .vimrc
  186  cd .vim
  187  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  188  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme -f
  189  git submodule add -f git@github.com:dracula/vim.git bundle/dracula-theme 
  190  ls
  191  cd ..
  192  ls
  193  neofetch
  194  script
  195  ls
  196  chsh -s /bin/zsh root
  197  sudo chsh -s /bin/zsh root
  198  exit
  199  sudo chsh -s /bin/zsh blizzard
  200  exit
  201  sudo chsh -s /bin/zsh Kalp
  202  sudo chsh -s /bin/zsh blizzard
  203  $SHELL
  204  logout
  205  exit
  206  sudo -s
  207  ls
  208  rm typescript
  209  ls
  210  cd Documents
  211  sl
  212  ls
  213  history
  214  bash
  215  ls
  216  cd ..
  217  ls
  218  mkdir git_projects
  219  ls
  220  cd git_projects
  221  ls
  222  git clone https://github.com/weynhamz/Arch-pacman
  223  ls
  224  cd git_projects
  225  ls
  226  git inti
  227  git init
  228  ls
  229  cd ..
  230  ls
  231  cd git_projects
  232  git clone https://github.com/AppleDesignResources/SanFranciscoFont
  233  cd SanFranciscoFont
  234  ls
  235  cd ..
  236  git commit
  237  cd SanFranciscoFont
  238  git commit
  239  cd ..
  240  ls
  241  cd SanFranciscoFont
  242  ls
  243  cd ..
  244  ls
  245  sudo pacman -S snap
  246  cd /usr/share/fonts
  247  ls
  248  cd noto
  249  s
  250  ls
  251  cd .
  252  d ..
  253  cd ..
  254  ls
  255  cd ..
  256  ls
  257  cd ..
  258  l
  259  ld
  260  sl
  261  history
  262  conky
  263  sudo pacman -S conky
  264  concky
  265  conky
  266  vim /usr/share/gnome-shell/theme/gnome-classic.css
  267  sudo vim /usr/share/gnome-shell/theme/gnome-classic.css
  268  gnome-shell
  269  gnome-shell --version
  270  sudo pacman -S gnome-shell-extensions
  271  yay -S hide-top-bar
  272  yay -Ss top-bar
  273  yay -S gnome-shell-extension-dynamic-top-bar
  274  sudo pacman -R arc-menu
  275  yay -S dash-to-panel
  276  yay -Ss dash-to-panel
  277  yay -S gnome-shell-extension-dash-to-panel
  278  ls
  279  cd
  280  ls
  281  cd Documents
  282  ls
  283  cd dash
  284  ls
  285  cd dash-to-dock
  286  ls
  287  vim README.md
  288  cd ..
  289  ;s
  290  cd ~/Downloads
  291  ls
  292  cd activities-confignls1729.v69.shell-extension
  293  ls
  294  makw
  295  make
  296  sudo mak
  297  sudo make
  298  make install
  299  cd ..
  300  ls
  301  cd -
  302  vim Readme.
  303  vim README.txt
  304  cd ~
  305  ls
  306  cd Documents
  307  sl
  308  ls
  309  mkdir oj
  310  cd oj
  311  ls
  312  vim ~/.zshrc
  313  vi
  314  source ~/.zshr
  315  source ~/.zshrc
  316  vi
  317  vi q1.c
  318  cd 
  319  ls
  320  cd -
  321  ls
  322  mv conkyrc_FOFO .conckyrc
  323  mv .conckyrc ~/
  324  conky
  325  ls
  326  cd
  327  vi .conckyrc
  328  ll
  329  la
  330  ls- a
  331  ls -a
  332  sudo pacman -S conky*
  333  sudo pacman -S conky-all
  334  sudo pacman -S conky-*
  335  sudo pacman -S conky-lua-nv
  336  sudo pacman -S conky-manager
  337  conky --help
  338  conky -c=~/.conkyrc
  339  ls
  340  ls -a
  341  conky -c=~/.conckyrc
  342  mv .conckyrc .conkyrc
  343  conky
  344  cd -
  345  ls
  346  cd ..
  347  cp -r FOFO ~/.conky
  348  cd ~/.conky
  349  ls
  350  c d..
  351  cd ..
  352  conky
  353  ls
  354  cd .conky
  355  ls
  356  cd scripts
  357  ls
  358  cd lua
  359  ls
  360  cdonky
  361  conky
  362  pwd
  363  cd ~/.vim
  364  ls
  365  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme
  366  ls
  367  la
  368  cd .git
  369  ls
  370  git check-ignore
  371  cd ..
  372  git check-ignore
  373  git check-ignore -v config.php
  374  ~/.gitconfig
  375  git config core.excludesfile
  376  git submodule add git@github.com:dracula/vim.git bundle/dracula-theme -f
  377  git submodule add -f git@github.com:dracula/vim.git bundle/dracula-theme 
  378  cd bundle
  379  ls
  380  vi Vundle.vim
  381  cd Vundle.vim
  382  ;s
  383  ls
  384  vi ~/.vimrc
  385  vi
  386  vim 
  387  vim
  388  vim +PluginInstall +qall
  389  vim
  390  lloooollllpl;;lolloll
  391  ls
  392  vi q1.c
  393  exit
  394  vi q1.c
  395  ls
  396  sudo pacman -Syu
  397  ls
  398  kill 1068
  399  variety
  400  exit
  401  conky-manager
  402  cd ~/.conky
  403  ls
  404  cd scripts
  405  ls
  406  cd ..
  407  vi .conkyrc
  408  cd .conky
  409  ls
  410  :q
  411  vi .conkyrc
  412  cd ..
  413  vi .conkyrc
  414  conky
  415  sudo pacman -S conky
  416  sudo pacman -r conky
  417  sudo pacman -R conky
  418  sudo pacman -R conky conky-manager
  419  sudo pacman -S conky-lua
  420  conky
  421  conky-manager
  422  sudo pacman -S conky-manager
  423  conky --help
  424  conky -c=~/.conkyrc
  425  ~/.conkyrc
  426  conky -c=.conkyrc
  427  ls -l
  428  ls -a
  429  conky -c=~/.conkyrc
  430  exit
  431  reboot
  432  cd ~/.local/share/gnome-shell/extensions/
  433  git clone https://github.com/mlutfy/hidetopbar.git hidetopbar@mathieu.bidon.ca\n
  434  cd hidetopbar@mathieu.bidon.ca
  435  make schemas
  436  gnome-shell-extension-tool -e hidetopbar@mathieu.bidon.ca
  437  gnome-shell --replace &
  438  yay -S polybar
  439  polybar
  440  polybar example
  441  poly-flat
  442  polybar example
  443  ls
  444  cd ~/.config/polybar
  445  mkdir ~/.config/polybar
  446  cd ~/.config/polybar
  447  vi config
  448  polybar example
  449  polybar config
  450  ls
  451  vi config
  452  polybar mybar
  453  vi config
  454  polybar top
  455  polybar bottom
  456  polybar top
  457  cd ~/git_projects
  458  git clone https://github.com/unix121/i3wm-themer
  459  ls
  460  cd i3wm-themer
  461  ls
  462  ./install_arch.sh
  463  vi README.md
  464  polybar mybar
  465  cd ~/.config/polybar
  466  ls
  467  ./i3wmthemer_bar_launch.sh
  468  kill 7774
  469  ls
  470  rm i3wmthemer_bar_launch.sh
  471  ls
  472  vi config
  473  rm config
  474  vi config
  475  polybar mybar
  476  vi config
  477  polybar mybar
  478  vi config
  479  polybar mybar
  480  vi config
  481  polybar mybar
  482  yay -S awesome-terminal-fonts
  483  vi config
  484  polybar mainbar-i3
  485  polybar mainbar-bspwm
  486  :q
  487  cd
  488  ls
  489  cd Music
  490  ls
  491  cd ..
  492  ls
  493  cd Documents/oj
  494  ls
  495  vi q1.c
  496  gcc q1.c
  497  vi q1.c
  498  gcc q1.c
  499  ./a.out
  500  vi q1.c
  501  ./a.out
  502  vi q1.c
  503  ./a.out
  504  a
  505  ./a.out
  506  vi q1.c
  507  ./a.out
  508  vi q1.c
  509  gcc q1.c
  510  ./a.out
  511  vi q1.c
  512  gcc q1.c
  513  ./a.out
  514  vi q1.c
  515  vi
  516  vi n
  517  rm n
  518  l
  519  vi q1.c
  520  sudo pacman -S termite
  521  termite
  522  ls
  523  ./a.out
  524  vi q1.c
  525  ./a.out
  526  vi q1.c
  527  gcc q1.c
  528  ./a.out
  529  exit
  530  sudo pacman -R folks termite
  531  sudo pacman -Rs folks termite
  532  sudo pacman -R termite
  533  ls
  534  vi q1.c
  535  rm a.out q1.c
  536  vi q1.c
  537  gcc q1.c
  538  vi q1.c
  539  gcc q1.c
  540  ./a.out
  541  vi q1.c
  542  gcc q1.c
  543  ./a.out 
  544  vi q1.c
  545  gcc q1.c
  546  ./a.out
  547  vi q1.c
  548  ./a.out
  549  vi q1.c
  550  gcc q1.c
  551  ./a.out
  552  vi q1.c
  553  gcc q1.c
  554  vi q1.c
  555  gcc q1.c
  556  vi q1.c
  557  gcc q1.c
  558  ./a.out
  559  vi q1.c
  560  gcc q1.c
  561  ./a.out
  562  4
  563  cd -
  564  ./a.out
  565  vi q1.c
  566  gcc q1.c
  567  ./a.out
  568  2
  569  ls
  570  cd git_projects
  571  ls
  572  git inti
  573  git init
  574  git add
  575  git add .
  576  ls
  577  git commit
  578  git commit "Commits"
  579  git commit "i3wm-themer"
  580  ;s
  581  ls
  582  cd ..
  583  git config --global user.name "Blizzard57"
  584  git config --global user.name
  585  git config --global user.email "kalp77000@gmail.com"
  586  git config --global --list\n
  587  git stastus
  588  git status
  589  cd git_projects
  590  git status
  591  git diff
  592  ls
  593  git add .
  594  git commit -m "CLI commits"
  595  ls
  596  cd
  597  cd ls
  598  ls
  599  la
  600  ls -a
  601  polybar
  602  vi q2.c
  603  sudo pacman -R libreoffice
  604  sudo pacman -Ss libreoffice
  605  cd Documents/oj
  606  ls
  607  cd
  608  s
  609  la
  610  ls
  611  rm q2.c
  612  cd -
  613  vi q2.c
  614  htop
  615  sudo pacman -S htop
  616  htop
  617  ls
  618  exit
  619  ls
  620  cd git_projects
  621  ls
  622  git add .
  623  git commit "Polybar"
  624  git commit
  625  git commit .
  626  git clone git://projects.archlinux.org/pacman.git pacman
  627  git clone  git://projects.archlinux.org/users/allan/pacman.git pacman
  628  ls
  629  cd ..
  630  cd Documents
  631  mkdir CiS
  632  cd CiS
  633  jupyter-notebook
  634  sudo pacman -S python3-numpy
  635  sudo pacman -Ss numpy
  636  sudo pacman -S python-numpy
  637  sudo pacman -S python-matplotlib
  638  sudo pacman -S python-scipy
  639  ls
  640  vi Harmonic\ Oscillation.ipynb
  641  exit
  642  ls
  643  cd git_projects
  644  ls
  645  git remote add toofishes git://code.toofishes.net/dan/pacman.git\n\n
  646  git clone git://projects.archlinux.org/pacman.git pacman
  647  \t\t\t\t\t\t\t\t\t\tls
  648  cd pacman
  649  l
  650  ls
  651  vi README
  652  ls
  653  cd s
  654  cd scripts
  655  ls
  656  cd library
  657  ls
  658  cd ..
  659  ls
  660  vi HACKING
  661  cd src/
  662  sl
  663  ls
  664  cd pacman
  665  ls
  666  vi database.c
  667  vi pacman.c
  668  sudo pacman -Syu
  669  l
  670  ll
  671  l
  672  cd
  673  ls
  674  cd -
  675  ls
  676  cd 
  677  cd git_projects
  678  ls
  679  git add .
  680  git submodule add pacman
  681  git submodule add ./pacman
  682  git commit ""
  683  git commit "."
  684  git commit "Commits"
  685  git commit "Pacman"
  686  ls
  687  cd pacman
  688  slls
  689  ls
  690  history
  691  \t\t\t\t\t\tls
  692  history
  693  \t
  694  sl
  695  ls
  696  l
  697  ll
  698  ./
  699  l
  700  ls
  701  cd m4
  702  ls
  703  cd ..
  704  l
  705  xbindkeys
  706  sudo pacman -S xbindkeys
  707  xbindkeys
  708  vi ~/.xbindkeysrc
  709  gnome-terminal
  710  exit
  711  xbindkeys
  712  vi ~/.xbindkeysrc
  713  xbindkeys
  714  xev
  715  xbindkeys -n
  716  vi ~/.xbindkeysrc
  717  xbindkeys
  718  yay xbindkeys_config_gtk2
  719  yay xbindkeys-config-gtk2
  720  yay -S xbindkeys-config-gtk2
  721  gtk2
  722  sxhkd
  723  sudo pacman -R xbindkeys
  724  yay -S sxhkd
  725  sxhkd
  726  mkdir ~/.config/sxhkd
  727  cd ~/.config/sxhkd
  728  vi sxhkdrc
  729  sxhkd
  730  exit
  731  cd git_projects
  732  ls
  733  git init
  734  git add
  735  git add .
  736  git commit
  737  l
  738  cd pacman
  739  ls
  740  cd build-aux
  741  ls
  742  vi script-wrapper.sh.in
  743  cd..
  744  cd ..
  745  ls
  746  cd test
  747  ls
  748  ..
  749  cd
  750  ls
  751  cd Documents
  752  ls
  753  cd CiS
  754  ls
  755  cd ..
  756  ls
  757  cd dash
  758  ls
  759  cd ..
  760  mv dash ../git_projects/
  761  ls
  762  cd ,,
  763  cd ..
  764  ls
  765  d git_projects
  766  cd git_projects
  767  ls
  768  git add .
  769  git commit
  770  ls
  771  sudo pacman -Syu
  772  ls
  773  cd git_projects
  774  ls
  775  cd pacman
  776  ls
  777  cd proto
  778  ls
  779  cd ..
  780  ls
  781  cd test
  782  ks
  783  ls
  784  cd pacman
  785  ls
  786  vi ldconfig.stub
  787  cd ..
  788  sl
  789  ls
  790  history
  791  sl
  792  ls
  793  vi AUT 
  794  vi AUTHORS
  795  cd doc
  796  ls
  797  cd ..
  798  sl
  799  ls
  800  cd lib
  801  ls
  802  cd libalpm/ls
  803  ls
  804  cd libalpm/
  805  ls
  806  vi trans.c
  807  vi backup.h
  808  ;s
  809  ls
  810  vi b
  811  ls
  812  git commit 
  813  git commit dash
  814  git commit i3wm-themer
  815  git commit .
  816  git add .
  817  git commit .
  818  cd
  819  ls
  820  cd P
  821  ls
  822  exit
  823  ls
  824  cd ..
  825  ls
  826  cd ..
  827  ls
  828  sudo pacman -S network-manager-openvpn-gnome
  829  ya -S network-manager-openvpn-gnome
  830  yay -S network-manager-openvpn-gnome
  831  sudo pacman -S openvpn
  832  osdemo
  833  osdemo32
  834  ls
  835  sudo pacman -S networkmanager-openvpn
  836  NetworkManager
  837  sudo NetworkManager
  838  ls
  839  cd 
  840  cd Documents
  841  ls
  842  cd ISS/=
  843  cd ISS/
  844  ls
  845  vi music_diary.sh
  846  ls | grep music_diary.csv | wc -l
  847  vi music_diary.sh
  848  sudo chmod u+x music_diary.sh
  849  ./music_diary.sh
  850  vi music_diary.sh
  851  ./music_diary.sh
  852  vi music_diary.sh
  853  rm music_diary.csv
  854  ./music_diary.sh
  855  vi music_diary.sh
  856  rm music_diary.csv
  857  vi music_diary.sh
  858  ./music_diary.sh
  859  $USER
  860  echo $USER
  861  vi music_diary.sh
  862  htop
  863  ls
  864  rm music_diary.csv
  865  ./music_diary.sh
  866  rm music_diary.csv
  867  vi music_diary.sh
  868  ./music_diary.sh
  869  vi music_diary.csv
  870  vi music_diary.sh
  871  rm music_diary.csv
  872  ./music_diary.sh
  873  ls
  874  vi music_diary.
  875  vi music_diary.csv
  876  rm music_diary.csv
  877  vi music_diary.sh
  878  rm music_diary.csv
  879  ./music_diary.sh
  880  rm music_diary.csv
  881  ./music_diary.sh
  882  rm music_diary.csv
  883  ./music_diary.sh
  884  rm music_diary.csv
  885  ./music_diary.sh
  886  vi music_diary.sh
  887  rm music_diary.csv
  888  ./music_diary.sh
  889  vi music_diary.sh
  890  ./music_diary.sh
  891  vi music_diary.sh
  892  ./music_diary.sh
  893  rm music_diary.csv
  894  ./music_diary.sh
  895  vi music_diary.csv
  896  rm music_diary.csv
  897  vi music_diary.csv
  898  rm music_diary.csv
  899  vi music_diary.sh
  900  seq (1 2 1)
  901  seq --help
  902  seq
  903  man seq
  904  ls
  905  
  906  
  907  man seq
  908  seq 1 100
  909  seq 1 100 2
  910  seq 1 2 100
  911  ls
  912  ./music_diary.sh
  913  vi music_diary.sh
  914  rm music_diary.csv
  915  ./music_diary.sh
  916  vi music_diary.csv
  917  ./music_diary.sh
  918  vi music_diary.sh
  919  seq 1 3
  920  rm music_diary.csv
  921  ./music_diary.sh
  922  echo $n
  923  vi music_diary.csv
  924  rm music_diary.csv
  925  vi music_diary.sh
  926  ./music_diary.sh
  927  vi music_diary.sh
  928  rm music_diary.csv
  929  ./music_diary.sh
  930  vi
  931  vi music_diary.csv
  932  vi
  933  rm music_diary.csv
  934  vi music_diary.sh
  935  ./music_diary.sh
  936  vi music_diary.csv
  937  vi temp_file
  938  paste music_diary.csv temp_file
  939  vi temp_file
  940  rm temp_file music_diary.csv
  941  vi music_diary.sh
  942  ./music_diary.sh
  943  vi music_diary.csv
  944  vi music_diary.csv | tr '\n' '|'
  945  cat music_diary.csv | tr '\n' '|'
  946  cat music_diary.csv | tr '\n' ''
  947  cat music_diary.csv | tr '\n' ' '
  948  cat music_diary.csv | tr '\n' '\0'
  949  vi music_diary.sh
  950  rm music_diary.csv
  951  ./music_diary.sh
  952  vi music_diary.csv
  953  vi music_diary.sh
  954  rm music_diary.csv
  955  ./music_diary.sh
  956  cat
  957  cat music_diary.csv
  958  rm music_diary.csv
  959  vi music_diary.sh
  960  ./music_diary.sh
  961  cat music_diary.sh
  962  cat music_diary.csv
  963  vi music_diary.sh
  964  rm music_diary.csv
  965  ./music_diary.sh
  966  vi music_diary.csv
  967  rm music_diary.csv
  968  vi music_diary.csv
  969  vi music_diary.sh
  970  ./music_diary.sh
  971  vi music_diary.csv
  972  vi music_diary.csv | sed 's.\n..g'
  973  cd Documents/ISS
  974  ls
  975  cat music_diary.csv | sed 's.\n..g'
  976  vi music_diary.csv | sed 'd.\n.g'
  977  cd Documents/ISS
  978  ls
  979  cat music_diary.csv | sed 'd.\n.g'
  980  sed --help
  981  cat music_diary.csv | sed 's/\n//'
  982  cat music_diary.csv | sed 's/\n$//'
  983  cat music_diary.csv | sed 's/\n$//g'
  984  cat music_diary.csv | sed -e 's.\n..g'
  985  cat music_diary.csv | sed -e 's.\n. .g'
  986  cat music_diary.csv | sed -e 's.\n..g'
  987  cat music_diary.csv | sed -e 's.\n. .g'
  988  sed '/\n/d' music_diary.csv
  989  cat music_diary.csv | tr '\n' '\0'
  990  sed '/\\n/d' music_diary.csv
  991  sed '/\\\n/d' music_diary.csv
  992  sed '/`\n`/d' music_diary.csv
  993  sed '/\\n//' music_diary.csv
  994  sed -e '/\\n//' music_diary.csv
  995  sed -e '/\n//' music_diary.csv
  996  sed -e 's/\n//' music_diary.csv
  997  sed -e 's/\\n//' music_diary.csv
  998  sed -e 's/^\n//' music_diary.csv
  999  vi
 1000  vi music_diary.sh
 1001  vi music_diary.csv
 1002  touch tm
 1003  vi tm
 1004  paste music_diary.csv tm
 1005  vi music_diary.sh
 1006  rm music_diary.csv tm
 1007  ls
 1008  ./music_diary.sh
 1009  vi music_diary.csv
 1010  vi music_diary.sh
 1011  rm music_diary.csv 
 1012  ./music_diary.sh
 1013  vi music_diary.csv
 1014  cat music_diary.csv | tail -1
 1015  vi music_diary.csv
 1016  vi music_diary.sh
 1017  rm music_diary.csv
 1018  ./music_diary.sh
 1019  ls
 1020  vi music_diary.sh
 1021  rm music_diary.csv
 1022  ./music_diary.sh
 1023  vi music_diary.csv
 1024  vi music_diary.sh
 1025  htop
 1026  ./music_diary.sh
 1027  vi music_diary.sh
 1028  ./music_diary.sh
 1029  vi music_diary.sh
 1030  ls
 1031  vi music_diary.csv
 1032  cat music_diary.csv | head -1 | tr "|" " "
 1033  vi music_diary.csv
 1034  vi music_diary.sh
 1035  ./music_diary.sh
 1036  vi music_diary.sh
 1037  ./music_diary.sh
 1038  vi music_diary.sh
 1039  ./music_diary.sh
 1040  vi music_diary.csv
 1041  vi music_diary.sh
 1042  ./music_diary.sh
 1043  vi music_diary.csv
 1044  echo -e \n
 1045  echo --help
 1046  man echo
 1047  echo -e fdf\n
 1048  echo-e fdf\n
 1049  echo -e fdf\n
 1050  echo -e fdf "\n"
 1051  echo -e fdf"\n"
 1052  vi music_diary.sh
 1053  vi music_diary.csv
 1054  ./music_diary.sh
 1055  vi music_diary.csv
 1056  vi temp_file
 1057  ./music_diary.sh
 1058  vi music_diary.sh
 1059  rm temp_file
 1060  ./music_diary.sh
 1061  vi music_diary.csv
 1062  vi music_diary.sh
 1063  vi music_diary.csv
 1064  ./music_diary.sh
 1065  vi music_diary.csv
 1066  rm music_diary.csv
 1067  ./music_diary.sh
 1068  la
 1069  vi temp_file
 1070  ./music_diary.sh
 1071  vi music_diary.
 1072  vi music_diary.sh
 1073  rm music_diary.csv
 1074  ./music_diary.sh
 1075  vi music_diary.sh
 1076  rm music_diary.csv temp_file
 1077  ./music_diary.sh
 1078  vi music_diary.csv
 1079  ./music_diary.sh
 1080  vi music_diary.csv
 1081  vi music_diary.sh
 1082  rm music_diary.csv temp_file
 1083  ./music_diary.sh
 1084  vi music_diary.csv
 1085  vi music_diary.sh
 1086  vi music_diary.csv
 1087  vi music_diary.sh
 1088  ./music_diary.sh
 1089  vi music_diary.csv
 1090  rm music_diary.csv temp_file
 1091  ./music_diary.sh
 1092  vi music_diary.csv
 1093  rm music_diary.csv
 1094  vi music_diary.sh
 1095  ls
 1096  ./music_diary.sh
 1097  vi music_diary.csv
 1098  ./music_diary.sh
 1099  vi music_diary.sh
 1100  rm music_diary.csv
 1101  ./music_diary.sh
 1102  vi music_diary.csv
 1103  vi music_diary.sh
 1104  ./music_diary.sh
 1105  vi music_diary.sh '
 1106  vi music_diary.sh
 1107  exit
 1108  ls
 1109  vi music_diary.csv
 1110  cat music_diary.sh | grep Hacking
 1111  cat music_diary.sh | grep Hack
 1112  ls
 1113  cat music_diary.sh |
 1114  cat music_diary.sh 
 1115  cat music_diary.csv | grep Hacking
 1116  vi music_diary.sh
 1117  cat music_diary.csv > temp
 1118  temp | grep Hacking > temp
 1119  cat temp | grep Hacking > temp
 1120  vi temp
 1121  cat music_diary.csv > temp
 1122  cat temp | grep Hacking >> temp
 1123  vi temp
 1124  ;s
 1125  ;d
 1126  ld
 1127  ls
 1128  ;d
 1129  ls
 1130  rm temp
 1131  vi music_diary.sh
 1132  ./music_diary.sh
 1133  vi music_diary.sh
 1134  ./music_diary.sh
 1135  vi music_diary.sh
 1136  ./music_diary.sh
 1137  ls
 1138  vi temp_file
 1139  rm temp_file*
 1140  ls
 1141  vi music_diary.csv
 1142  ls
 1143  vi music_diary.sh
 1144  vi music_diary.csv
 1145  ./music_diary.sh
 1146  vi temp_file1
 1147  vi temp_file2
 1148  ls
 1149  vi temp_file
 1150  vi music_diary.csv
 1151  vi music_diary.sh
 1152  ld
 1153  ls
 1154  ld music_diary.csv
 1155  ls
 1156  rm temp_file*
 1157  ls
 1158  libnotify
 1159  dunst
 1160  dunst --help
 1161  notify-send
 1162  notify-send -i face-wink "Hello! January"
 1163  notify-send <title> <message>\nnotify-send "who am i" "I am January"\n
 1164  notify-send "who am i" "I am January"\n
 1165  notify-send -t 2 Hello
 1166  notify-send -t 5 Hello
 1167  notify-send -t 0 Hello
 1168  notify-send --help
 1169  sudo pacman -Syu
 1170  shkdx
 1171  skhdx
 1172  history
 1173  bash
 1174  ls
 1175  lss
 1176  slls
 1177  alsamixer
 1178  exit
 1179  ls
 1180  vi notification.sh
 1181  watch -n 1 echo Hello
 1182  man watch
 1183  ls
 1184  watch -n 20 notify-send Hello 
 1185  watch -n 20 notify-send Hello &
 1186  kill 16226
 1187  watch -n 20 notify-send Hello &
 1188  kill 16349
 1189  ls
 1190  exit
 1191  ls
 1192  cd Documents/ISS
 1193  ls
 1194  cd ..
 1195  ls
 1196  rm ISS.tar.xz
 1197  ls
 1198  ISS
 1199  ls
 1200  vi notification.sh
 1201  sleep 
 1202  sleep 2
 1203  vi notification.sh
 1204  sudo chmod u+x notification.sh
 1205  ./notification.sh 1
 1206  ls
 1207  settings
 1208  l
 1209  gsettings
 1210  _gsettings
 1211  ls
 1212  l
 1213  cl
 1214  ls
 1215  vi reminder.sh
 1216  kill 0
 1217  ls
 1218  kill exit
 1219  exit
 1220  ps aux
 1221  ls
 1222  exit
 1223  ls
 1224  cd Documents/ISS
 1225  ls
 1226  vi reminder.sh
 1227  vi notification.sh
 1228  vi reminder.sh
 1229  ls
 1230  sudo chmod u+x reminder.sh
 1231  ls
 1232  cd ..
 1233  ls
 1234  cd oj
 1235  sl
 1236  ls
 1237  vi lab1.c
 1238  cd ..
 1239  l
 1240  cd ISS
 1241  ls
 1242  vi reminder.sh
 1243  cd ..
 1244  cd oj
 1245  vi lab1.c
 1246  gcc lab1.c
 1247  vi lab1.c
 1248  gcc lab1.c
 1249  ./a.out
 1250  vi lab1.c
 1251  gcc lab1.c
 1252  ./a.out
 1253  vi lab1.c
 1254  gcc lab1.c
 1255  vi lab1.c
 1256  gcc lab1.c
 1257  vi lab1.c
 1258  gcc lab1.c
 1259  vi lab1.c
 1260  gcc lab1.c
 1261  vi lab1.c
 1262  gcc lab1.c
 1263  vi lab1.c
 1264  gcc lab1.c
 1265  ./a.out
 1266  vi lab1.c
 1267  gcc lab1.c
 1268  vi lab1.c
 1269  gcc lab1.c
 1270  ./a.out
 1271  vi lab1.c
 1272  gcc lab1.c
 1273  ./a.out
 1274  vi lab1.c
 1275  gcc lab1.c
 1276  ./a.out
 1277  vi lab1.c
 1278  gcc lab1.c
 1279  ./a.out
 1280  vi lab1.c
 1281  gcc lab1.c
 1282  ./a.out
 1283  vi lab1.c
 1284  gcc lab1.c
 1285  ./a.out
 1286  :q
 1287  vi lab1.c
 1288  gcc lab1.c
 1289  vi lab1.c
 1290  gcc lab1.c
 1291  ./a.out
 1292  vi lab1.c
 1293  gcc lab1.c
 1294  ./a.out
 1295  vi lab1.c
 1296  gcc lab1.c
 1297  ./a.out
 1298  vi lab1.c
 1299  gcc lab1.c
 1300  ./a.out
 1301  vi lab1.c
 1302  cd Downloads
 1303  ls
 1304  mv test\(1\).c LAB1.C
 1305  mv LAB1.C lab1.c
 1306  vi l
 1307  vi lab1.c
 1308  gcc lab1.c
 1309  ./a
 1310  ./a.out
 1311  vi lab1.c
 1312  gcc lab1.c
 1313  vi lab1.c
 1314  gcc lab1.c
 1315  ./a.out
 1316  vi lab1.c
 1317  exit
 1318  cd ..
 1319  ls
 1320  cd ISS
 1321  ls
 1322  vi reminder.sh
 1323  kill 20215
 1324  cd -
 1325  cd Documents/ISS
 1326  ls
 1327  vi reminder.sh
 1328  vi music_diary.
 1329  vi music_diary.sh
 1330  rm music_diary.csv
 1331  ./music_diary.sh
 1332  ls
 1333  vi reminder.sh
 1334  column -t -s"|" music_diary.csv
 1335  ls
 1336  column --help
 1337  vi music_diary.csv
 1338  column music_diary.csv
 1339  column -t music_diary.csv
 1340  column -t -s "|" music_diary.csv
 1341  vi reminder.sh
 1342  vi new_test.sh
 1343  sudo chmod u+x new_test.sh
 1344  ./new_test.sh
 1345  rm new_test.sh
 1346  vi reminder.sh
 1347  ./reminder.sh
 1348  vi reminder.sh
 1349  ./reminder.sh
 1350  vi reminder.sh
 1351  ./reminder.sh
 1352  vi reminder.sh
 1353  vi music_diary.
 1354  vi music_diary.sh
 1355  vi reminder.sh
 1356  vi sing.sh
 1357  vi notification.sh
 1358  vi sing.sh
 1359  sudo chmod u+x sing.sh
 1360  ./sing.sh
 1361  vi sing.sh
 1362  ./sing.sh 1 1
 1363  ./reminder.sh
 1364  vi reminder.sh
 1365  ./reminder.sh
 1366  vi reminder.sh
 1367  ./reminder.sh
 1368  vi reminder.sh
 1369  ./reminder.sh
 1370  vi reminder.sh
 1371  ./reminder.sh
 1372  vi reminder.sh
 1373  vi rem_data.csv
 1374  vi reminder.sh
 1375  rm rem_data.csv
 1376  rm temp_file
 1377  ls
 1378  vi reminder.sh
 1379  ./reminder.sh
 1380  vi reminder.sh
 1381  vi music_diary.sh
 1382  vi reminder.sh
 1383  rm rem_data.csv
 1384  ./reminder.sh
 1385  ls
 1386  vi reminder.sh
 1387  ./reminder.sh
 1388  vi reminder.sh
 1389  echo `./sing 2 1`
 1390  x=./sing 2 1
 1391  ls
 1392  l
 1393  ./sing 2 1
 1394  vi reminder.sh
 1395  echo `./sing.sh 2 1`
 1396  ./sing.sh 2 1
 1397  x="./sing.sh 2 1"
 1398  echo $x
 1399  x="`./sing.sh 2 1`"
 1400  ls
 1401  x=$(./sing.sh 2 1)
 1402  vi sing.sh
 1403  x=$(./sing.sh 2 1)
 1404  ./sing.sh Hello 1
 1405  kill 6250
 1406  vi sing.sh
 1407  vi reminder.sh
 1408  vi sing.sh
 1409  vi reminder.sh
 1410  ./reminder.sh
 1411  vi reminder.sh
 1412  attr
 1413  sudo pacman -S at
 1414  ls
 1415  at --help
 1416  man at
 1417  vi sing.sh
 1418  ls
 1419  crontab
 1420  vi sing.sh
 1421  ./sing.sh 2 1
 1422  vi reminder.sh
 1423  vi sing.sh
 1424  vi reminder.sh
 1425  ./reminder.sh
 1426  vi rem_data.csv
 1427  vi reminder.sh
 1428  ./reminder.sh
 1429  vi reminder.sh
 1430  ./reminder.sh
 1431  vi reminder.sh
 1432  rm rem_data.csv
 1433  ./reminder.sh
 1434  vi reminder.sh
 1435  man sleep
 1436  vi reminder.sh
 1437  vi notification.sh
 1438  vi reminder.sh
 1439  at
 1440  at --help
 1441  at -help
 1442  ps
 1443  ./sing.sh
 1444  ./sing.sh 2 1
 1445  ps
 1446  kill 8886
 1447  ls
 1448  kill 8886
 1449  ps
 1450  rm 8887
 1451  kill 8887
 1452  ls
 1453  l
 1454  at now +2 min -f notify-send -2 Hello Bitch
 1455  at now +2min -f notify-send -2 Hello Bitch
 1456  at now +2min notify-send -2 Hello Bitch
 1457  at now notify-send -2 Hello Bitch
 1458  at now `notify-send -2 Hello Bitch`
 1459  ls
 1460  atq
 1461  atrm 1
 1462  ls
 1463  notify-send -t 0 Hello | at 10:50 PM
 1464  atd
 1465  notify-send -t 0 Hello | at 10:50 PM
 1466  vi music_diary.
 1467  vi music_diary.sh
 1468  notify-send -t 2 Hello | at now + 30 minutes
 1469  notify-send -t 2 Hello | at now + 1 minutes
 1470  atm
 1471  atd
 1472  atq
 1473  notify-send -t 2 Hello | at now + 1 minutes
 1474  sudo atd
 1475  notify-send -t 2 Hello | at now + 1 minutes
 1476  vi reminder.sh
 1477  notify-send -t 2 Hello
 1478  vi music_diary.csv
 1479  ./reminder.sh
 1480  ./music_diary.sh
 1481  vi music_diary.csv
 1482  vi reminder.sh
 1483  arm
 1484  atq
 1485  atrm 1
 1486  atrm 4
 1487  rm music_diary.csv
 1488  ./music_diary.sh
 1489  vi music_diary.csv
 1490  vi music_diary.sh
 1491  cd 
 1492  cd git_projects
 1493  ls
 1494  cd pacman
 1495  ls
 1496  cd scripts
 1497  ls
 1498  cd completion/w
 1499  cd completion/
 1500  ls
 1501  vi zsh_completion.in
 1502  ls
 1503  cd ..
 1504  ls
 1505  cd .
 1506  cd ..
 1507  ls
 1508  cd lib
 1509  sl
 1510  ls
 1511  cd libalpm
 1512  l
 1513  ls
 1514  cd
 1515  cd Documents/ISS
 1516  ls
 1517  history
 1518  time
 1519  vi reminder.sh
 1520  atq|tr "\t" ""|tail -1|cut -d " " -f1
 1521  atq|tr "\t" " "|tail -1|cut -d " " -f1
 1522  atq
 1523  notify-send -t 2 Hello | at now + 1 minutes
 1524  atq|tr "\t" " "|tail -1|cut -d " " -f1
 1525  atrm 8
 1526  vi reminder.sh
 1527  ./reminder.sh
 1528  vi reminder.sh
 1529  ls
 1530  vi music_diary.sh
 1531  ./music_diary.sh
 1532  vi music_diary.csv
 1533  vi music_diary.sh
 1534  vi temp_file1
 1535  vi temp_file2
 1536  vi temp_file
 1537  vi sing.sh
 1538  vi music_diary.
 1539  vi music_diary.sh
 1540  ./music_diary.sh
 1541  vi temp_file1
 1542  vi temp_file2
 1543  vi music_diary.sh
 1544  sed -i '/$(cat temp_file1)/d' music_diary.csv\n
 1545  vi music_diary.
 1546  vi music_diary.csv
 1547  cat temp_file1
 1548  history
 1549  ls
 1550  vi temp_file1
 1551  cat temp_file1
 1552  vi music_diary.sh
 1553  ./music_diary.sh
 1554  cat temp_file1
 1555  cat temp_file2
 1556  vi music_diary.sh
 1557  ./music_diary.sh
 1558  cat temp_file1
 1559  cat music_diary.csv
 1560  vi music_diary.sh
 1561  rm music_diary.csv
 1562  ./music_diary.sh
 1563  cat music_diary.csv
 1564  cat music_diary.csv | column -t -s"|"
 1565  vi music_diary.sh
 1566  ./music_diary.sh
 1567  vi music_diary.sh
 1568  ./music_diary.sh
 1569  vi music_diary.sh
 1570  ./music_diary.sh
 1571  vi music_diary.sh
 1572  ls
 1573  vi temp_file1
 1574  l
 1575  sed -i '/$(cat temp_file1)/d' music_diary.csv\n
 1576  vi music_diary.csv
 1577  sed -i '/Stepping|Eminem/d' music_diary.csv\n
 1578  vi music_diary.csv
 1579  vi music_diary.sh
 1580  ./music_diary.sh
 1581  cat music_diary.csv
 1582  rm temp_file
 1583  rm temp_file*
 1584  ./music_diary.sh
 1585  vi music_diary.sh
 1586  cat temp_file2
 1587  vi music_diary.sh
 1588  rm temp_file*
 1589  ./music_diary.sh
 1590  cat music_diary.csv | grep `cat temp_file1`
 1591  cat music_diary.csv | grep `cat temp_file1` | wc -l
 1592  echo `cat music_diary.csv | grep `cat temp_file1``
 1593  echo $(cat music_diary.csv | grep `cat temp_file1`)
 1594  sed -i `/$(echo $(cat music_diary.csv | grep `cat temp_file1`))/d' music_diary.csv\nls
 1595  sed -i '/$(echo $(cat music_diary.csv | grep `cat temp_file1`))/d' music_diary.csv
 1596  cat music_diary.csv
 1597  x=echo $(cat music_diary.csv | grep `cat temp_file1`)
 1598  x=$(echo $(cat music_diary.csv | grep `cat temp_file1`))
 1599  sed -i '/$x/d' music_diary.csv
 1600  cat music_diary.csv
 1601  echo $x
 1602  awk '!/$x/' music_diary.csv
 1603  awk '!/`echo $x`/' music_diary.csv
 1604  echo $x
 1605  cat music_diary.csv
 1606  ls
 1607  sed -i '\|$x|d' music_diary.csv
 1608  cat music_diary.csv
 1609  sed '\|$x|d' music_diary.csv
 1610  sed '/$x/d' music_diary.csv
 1611  sed -n '/$x/!p' music_diary.csv
 1612  sed 's/\|/\\\|/g' $x
 1613  echo $x | sed 's/\|/\\\|/g'
 1614  echo $x | sed 's/\| |/g'
 1615  echo $x | sed 's/\|\ |/g'
 1616  echo $x | sed 's/\|/ |/g'
 1617  echo $x | sed 's/\|/\ /g'
 1618  echo $x | sed 's/\\|/\ /g'
 1619  echo $x | sed 's/|/\ /g'
 1620  ls
 1621  sed -i "/$x/d" music_diary.csv
 1622  cat music_diary.csv
 1623  vi music_diary.sh
 1624  ./music_diary.sh
 1625  vi music_diary.sh
 1626  cat temp_file1
 1627  vi music_diary.sh
 1628  rm temp_file*
 1629  ./music_diary.sh
 1630  vi music_diary.sh
 1631  ./music_diary.sh
 1632  vi music_diary.sh
 1633  ls
 1634  touch temp_file
 1635  echo Youtube Link >> temp_file
 1636  cat temp_file
 1637  paste music_diary.csv temp_file
 1638  cat music_diary.csv
 1639  paste music_diary.csv temp_file > music_diary.csv
 1640  cat music_diary.csv
 1641  cat music_diary.csv | tr "\t" "|"
 1642  vi music_diary.csv
 1643  paste music_diary.csv temp_file |  tr "\t" "|" 
 1644  paste music_diary.csv temp_file |  tr "\t" "" 
 1645  paste music_diary.csv temp_file |  tr "\t" "\0"
 1646  vi music_diary.csv
 1647  paste --help
 1648  paste -d "|" music_diary.csv temp_file
 1649  paste -z music_diary.csv temp_file
 1650  paste -d "|" music_diary.csv temp_file
 1651  paste -d "|" music_diary.csv temp_file > music_diary.csv
 1652  cat music_diary.csv
 1653  echo $(paste -d "|" music_diary.csv temp_file) > music_diary.csv
 1654  cat music_diary.csv
 1655  vi music_diary.csv
 1656  echo $(paste -d "|" music_diary.csv temp_file) > music_diary.csv
 1657  cat music_diary.csv
 1658  vi music_diary.csv
 1659  echo -e $(paste -d "|" music_diary.csv temp_file) > music_diary.csv
 1660  cat music_diary.csv
 1661  echo -e $(paste -d "|" music_diary.csv temp_file) > music_diary.csv
 1662  vi music_diary.csv
 1663  echo -e $(paste -d "|" music_diary.csv temp_file)
 1664  echo $(paste -d "|" music_diary.csv temp_file)
 1665  echo $(paste -d "" music_diary.csv temp_file)
 1666  echo $(paste -d "" music_diary.csv temp_file) | tr " " "\n"
 1667  $(paste -d "" music_diary.csv temp_file)
 1668  paste -d "" music_diary.csv temp_file
 1669  paste -d "" music_diary.csv temp_file | column
 1670  paste -d "" music_diary.csv temp_file | column > music_diary.csv
 1671  cat music_diary.csv
 1672  vi music_diary.csv
 1673  paste -d "" music_diary.csv temp_file | column > temp_file
 1674  cat temp_file
 1675  cat temp_file | tr "\t" "\n"
 1676  cat temp_file | tr "\t" " "
 1677  paste -d "" music_diary.csv temp_file > temp_file
 1678  cat temp_file
 1679  paste -d "" music_diary.csv temp_file > temp_file2
 1680  vi temp_file
 1681  cat temp_file2
 1682  cat temp_file2 > temp_file
 1683  cat temp_file
 1684  ls
 1685  rm temp_file*
 1686  ls
 1687  vi music_diary.sh
 1688  ./music_diary.sh
 1689  vi music_diary.sh
 1690  ./music_diary.sh
 1691  vi music_diary.sh
 1692  vi music_diary.csv
 1693  vi music_diary.sh
 1694  rm music_diary.csv
 1695  ./music_diary.sh
 1696  ls
 1697  cd Documents/ISS
 1698  ls
 1699  cd ..
 1700  mkdir lab
 1701  cd lab
 1702  ls
 1703  mkdir iss
 1704  cd iss
 1705  ls
 1706  vi hamlet.txt
 1707  history | grep script
 1708  script
 1709  ls
 1710  grep --help
 1711  cat hamlet.txt| grep -e ^.*(ly)
 1712  cat hamlet.txt| grep -e "^.*(ly)'
 1713  cat hamlet.txt| grep -e "^.*(ly)"
 1714  cat hamlet.txt
 1715  cat hamlet.txt| grep -e "^.*(ly)*"
 1716  cat hamlet.txt| grep ly
 1717  cat hamlet.txt| grep -e "*ly"
 1718  grep -e "*ly" hamlet.txt
 1719  grep -e "$ly" hamlet.txt
 1720  grep -e "ly$" hamlet.txt
 1721  grep "ly$" hamlet.txt
 1722  grep "[A-Z][a-z]" hamlet.txt
 1723  grep "[l][y]" hamlet.txt
 1724  grep "rea" hamlet.txt
 1725  grep "*rea" hamlet.txt
 1726  grep "*rea*" hamlet.txt
 1727  grep "\*rea\*" hamlet.txt
 1728  grep "^T" hamlet.txt
 1729  grep "[s\?\-]" hamlet.txt
 1730  grep "^((?$" hamlet.txt
 1731  grep "^((?" hamlet.txt
 1732  grep /(?s)^((?$/ hamlet.txt
 1733  grep "^(? hamlet.txt
 1734  grep "[^T]" hamlet.txt
 1735  grep "^[^T]" hamlet.txt
 1736  grep "[s\?\-]" hamlet.txt\n
 1737  cd Documents/lab/iss
 1738  grep "[s\?\-]" hamlet.txt\n
 1739  grep "[^the][to]" hamlet.txt
 1740  grep "[^t][^h][^e][t][o]" hamlet.txt
 1741  grep "^(?=.*the)" hamlet.txt
 1742  grep "^(the)" hamlet.txt
 1743  grep "^the" hamlet.txt
 1744  grep "*^the" hamlet.txt
 1745  grep "^[t][h][e]" hamlet.txt
 1746  grep "[^t][^h][^e]" hamlet.txt
 1747  grep "^(the)" hamlet.txt
 1748  grep "[s\?\-\,]" hamlet.txt\n
 1749  grep "ly" hamlet.txt
 1750  grep "ly|rea" hamlet.txt
 1751  grep "(ly|rea)" hamlet.txt
 1752  grep "ly\|rea" hamlet.txt
 1753  grep "ly\|rea\|self" hamlet.txt
 1754  grep "ly\|rea\|self" hamlet.txt\n\n
 1755  grep "^the" hamlet.txt
 1756  grep -v "the" hamlet.txt | grep "to"
 1757  grep -v "the" hamlet.txt | grep "to"\n
 1758  vi card.txt
 1759  sudo pacman -S telegram
 1760  sudo pacman -S telegram-deskto[
 1761  sudo pacman -S telegram-desktop
 1762  ls
 1763  sed -i /s/****\ ****\ **/####\ ####\ ##/g
 1764  sed -i /s/[0-9]***\ ****\ **/####\ ####\ ##/g
 1765  sed -i /s/[0-9]***\ ****\ **/\#\#\#\#\ \#\#\#\#\ ##/g
 1766  sed -e /s/\*\*\*\*\ \*\*\*\*\ \*\*/#### #### ##/g
 1767  sed -e /s/....\ ....\ ../#### #### ##/g
 1768  sed /s/....\ ....\ ../#### #### ##/g
 1769  sed --help
 1770  sed -e /s/....\ ....\ ../#### #### ##/g
 1771  ls
 1772  cd Documents/lab/iss
 1773  ls
 1774  script
 1775* sed -e /s/^./g
 1776* sed -e /s/^./G/g
 1777* sed -e /s/^./G/g card.txt
 1778* sed -e '/s/....\ ....\ ../#### #### ##/g' card.txt
 1779* sed  '/s/....\ ....\ ../#### #### ##/g' card.txt
 1780* sed  's/....\ ....\ ../#### #### ##/g' card.txt
 1781* ls
 1782* vi lab3.sh
 1783* vi hamlet.txt
 1784* vi lab3.sh
 1785* vi marks.txt
 1786* awk '{for(i=1;i<=NF;i++) t+=$i; print t; t=0}' marks.txt
 1787* vi lab3.sh
 1788* vi awk_comm.sh
 1789* ./awk_comm.sh
 1790* awk '{\n        if ($1+$2+$3 > 240) grade="A";\n        else if ($1+$2+$3 > 180) grade="B";\n        else if ($1+$2+$3 > 120) grade="C";\n        else grade="F";\n        print $0," : ",grade;\n}' marks.txt > grades.txt
 1791* vi grades.txt
 1792* cat grades.txt
 1793* vi lab3.sh
 1794* vi awk_comm.sh
 1795* vi lab3.sh
 1796  cd
 1797  cd git_projects
 1798  git push origin master
 1799  git push . master
 1800  git push origin master
 1801  sudo git push origin master
 1802  cd -
 1803  cd --
 1804  cd Documents/lab
 1805  ls
 1806  cd iss
 1807  s;
 1808  ls
 1809  mkdir local-repo
 1810  local-repo
 1811  git init
 1812  vi foo.txt
 1813  git checkout -b branch
 1814  vi bar.txt
 1815  git add .
 1816  git commit "Local Commit"
 1817  git commit -m "Local Commit"
 1818  git checkout master
 1819  ls
 1820  git master
 1821  git checkout master
 1822  git checkout branch
 1823  git checkout Master
 1824  cd ..
 1825  ls
 1826  cd local-repo
 1827  git checkout -b master
 1828  ls
 1829  checkout master
 1830  git checkout master
 1831  ls
 1832  git checkout branch
 1833  git checkout master
 1834  git merge branch
 1835  git add 
 1836  git add .
 1837  git commit -m "New Commit"
 1838  cd ..
 1839  ls
 1840  rm local-repo
 1841  rm -rf local-repo
 1842  mkdir local-repo
 1843  cd local-repo
 1844  ls
 1845  git init
 1846* exit
 1847* vi index.html
 1848* vi question2.html
 1849  vi foo.txt
 1850  git add .
 1851  git commit -m "First Commit"
 1852  git checkout -m new_branch
 1853  git checkout -b new_branch
 1854  vi bar.txt
 1855  git commit -a -m "Feature Commit"
 1856  git add .
 1857  git commit -a -m "Feature Commit"
 1858  git checkout master
 1859  git merge --no-ff new_branch
 1860  git push . master
 1861  git push origin master
 1862  ls
 1863  cd
 1864  cd git_projects
 1865  ls
 1866  git add .
 1867  git push origin
 1868  git push --set-upstream origin master
 1869  git push
 1870  git push .
 1871  git push origin master
 1872  git add upstream
 1873  git branch
 1874  man git
 1875  ls
 1876  git clone https://github.com/Blizzard57/C-pro-codes
 1877  cd C-pro-codes
 1878  ls
 1879  vi README.md
 1880  cd ..
 1881  git push 
 1882  cd C-pro-codes
 1883  ls
 1884  git push origin master
 1885  cd ..
 1886  ls
 1887  git push
 1888  git remote add .
 1889  git remote add origin https://github.com/Blizzard57/git_proj.git
 1890  cd 
 1891  cd Documents/lab/iss
 1892  vi lab3.sh
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004hhistory | grep git init[?1l>[?2004l
]2;omz_history | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} git ]1;historygrep: init: No such file or directory
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hhistory | grep git init[1C"git init[8D[1C[1C[1C[1C[1C[1C[1C[1C'[?1l>[?2004l
[0m[27m[24m[J[1m[0m[1m[33mâžœ [0m[33m[39m[1m[0m[K[?1h=[?2004h[?2004l
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[31mâžœ [0m[31m[39m[1m[0m[K[?1h=[?2004hhistory | grep "git init' : "[?1l>[?2004l
]2;omz_history | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} ]1;history  132  [01;31m[Kgit init[m[K
  227  [01;31m[Kgit init[m[K
  573  [01;31m[Kgit init[m[K
  733  [01;31m[Kgit init[m[K
 1811  [01;31m[Kgit init[m[K
 1845  [01;31m[Kgit init[m[K
 1894  history | grep [01;31m[Kgit init[m[K
 1895  history | grep "[01;31m[Kgit init[m[K'
[1m[7m%[27m[1m[0m                                                                                ]2;blizzard@farz: ~/Documents/lab/iss]1;..ments/lab/iss[0m[27m[24m[J
[1m[0m[1m[36mDocuments/lab/iss[0m[36m[39m[1m [0m
[1m[0m[1m[32mâžœ [0m[32m[39m[1m[0m[K[?1h=[?2004heexit[?1l>[?2004l
]2;exit]1;exit
Script done on 2019-02-02 18:47:51+05:30 [COMMAND_EXIT_CODE="0"]
